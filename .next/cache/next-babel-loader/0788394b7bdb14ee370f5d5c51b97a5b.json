{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTAP() {\n  var access_token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var signUp = function signUp() {\n    var userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n    var _ref = arguments.length > 2 ? arguments[2] : undefined,\n        _ref$success = _ref.success,\n        success = _ref$success === void 0 ? function () {\n      var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    } : _ref$success,\n        _ref$fail = _ref.fail,\n        fail = _ref$fail === void 0 ? function () {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    } : _ref$fail;\n\n    setLoading(true);\n    return axios.post(\"http://\".concat(BASE_URL, \"/signup\"), {\n      json: _JSON$stringify({\n        userId: userId,\n        password: password\n      })\n    }, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    }).then(function (res) {\n      success(res, function () {\n        setLoading(false);\n      });\n    })[\"catch\"](function (err) {\n      fail(err);\n      setLoading(false);\n    });\n  };\n\n  var overlap = function overlap(id) {\n    return axios.get(\"http://\".concat(BASE_URL, \"/overlap/\").concat(id), {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    });\n  };\n\n  useEffect(function () {\n    if (access_token) {\n      setLoading(true);\n      axios.get(\"http://\".concat(BASE_URL, \"/tistory/blogs\"), {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(function (res) {\n        console.log(res.data);\n        setData(res.data);\n        return res;\n      })[\"catch\"](function (error) {\n        setError(error);\n        return error;\n      })[\"finally\"](function () {\n        setLoading(false);\n      });\n    }\n  }, [access_token]);\n  return {\n    signUp: signUp,\n    overlap: overlap,\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseTAP.propTypes = {};\nexport default useTAP;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTAP.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useTAP","access_token","data","setData","loading","setLoading","error","setError","signUp","userId","password","success","response","fail","post","json","timeout","then","res","err","overlap","id","get","params","console","log","propTypes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTAP(access_token = \"\") {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const signUp = (\n    userId = \"\",\n    password = \"\",\n    { success = (response = {}) => {}, fail = (error = {}) => {} }\n  ) => {\n    setLoading(true);\n    return axios\n      .post(\n        `http://${BASE_URL}/signup`,\n        { json: JSON.stringify({ userId, password }) },\n        {\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        }\n      )\n      .then(res => {\n        success(res, () => {\n          setLoading(false);\n        });\n      })\n      .catch(err => {\n        fail(err);\n        setLoading(false);\n      });\n  };\n  const overlap = id => {\n    return axios.get(`http://${BASE_URL}/overlap/${id}`, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n    });\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios\n        .get(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          return error;\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [access_token]);\n\n  return {\n    signUp,\n    overlap,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTAP.propTypes = {};\n\nexport default useTAP;\n"]},"metadata":{},"sourceType":"module"}