{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTAP() {\n  var access_token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var signUp = function signUp() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      id: \"\",\n      pass: \"\"\n    };\n    setLoading(true);\n    return axios.post(\"http://\".concat(BASE_URL, \"/signup\"), {\n      json: _JSON$stringify(data)\n    }, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    })[\"catch\"](function (error) {\n      setError(error);\n      return error;\n    })[\"finally\"](function () {\n      setLoading(false);\n    });\n  };\n\n  var overlap = function overlap(id) {\n    setLoading(true);\n    return axios.get(\"http://\".concat(BASE_URL, \"/overlap/\").concat(id), {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    })[\"catch\"](function (error) {\n      setError(error);\n      return error;\n    })[\"finally\"](function () {\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    if (access_token) {\n      setLoading(true);\n      axios.get(\"http://\".concat(BASE_URL, \"/tistory/blogs\"), {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(function (res) {\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n        return res;\n      })[\"catch\"](function (error) {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n    }\n  }, [access_token]);\n  return {\n    signUp: signUp,\n    overlap: overlap,\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseTAP.propTypes = {};\nexport default useTAP;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTAP.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useTAP","access_token","data","setData","loading","setLoading","error","setError","signUp","id","pass","post","json","timeout","overlap","get","params","then","res","console","log","propTypes"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,MAAT,GAAmC;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;;AAAA,kBACTP,QAAQ,EADC;AAAA,MAC1BQ,IAD0B;AAAA,MACpBC,OADoB;;AAAA,mBAEHT,QAAQ,CAAC,KAAD,CAFL;AAAA,MAE1BU,OAF0B;AAAA,MAEjBC,UAFiB;;AAAA,mBAGPX,QAAQ,EAHD;AAAA,MAG1BY,KAH0B;AAAA,MAGnBC,QAHmB;;AAKjC,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAiC;AAAA,QAAhCN,IAAgC,uEAAzB;AAAEO,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,IAAI,EAAE;AAAhB,KAAyB;AAC9CL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOR,KAAK,CACTc,IADI,kBAEOb,QAFP,cAGH;AAAEc,MAAAA,IAAI,EAAE,gBAAeV,IAAf;AAAR,KAHG,EAIH;AACEW,MAAAA,OAAO,EAAEd,YAAY,GAAG,CAD1B,CAC4B;;AAD5B,KAJG,WAQE,UAAAO,KAAK,EAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,aAAOA,KAAP;AACD,KAXI,aAYI,YAAM;AACbD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdI,CAAP;AAeD,GAjBD;;AAkBA,MAAMS,OAAO,GAAG,SAAVA,OAAU,CAAAL,EAAE,EAAI;AACpBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOR,KAAK,CACTkB,GADI,kBACUjB,QADV,sBAC8BW,EAD9B,GACoC;AACvCI,MAAAA,OAAO,EAAEd,YAAY,GAAG,CADe,CACb;;AADa,KADpC,WAIE,UAAAO,KAAK,EAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,aAAOA,KAAP;AACD,KAPI,aAQI,YAAM;AACbD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVI,CAAP;AAWD,GAbD;;AAeAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,MAAAA,KAAK,CACFkB,GADH,kBACiBjB,QADjB,qBAC2C;AACvCkB,QAAAA,MAAM,EAAE;AAAEf,UAAAA,YAAY,EAAEA;AAAhB,SAD+B;AAEvCY,QAAAA,OAAO,EAAEd,YAAY,GAAG,CAFe,CAEb;;AAFa,OAD3C,EAKGkB,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAChB,IAAhB;AACAC,QAAAA,OAAO,CAACe,GAAG,CAAChB,IAAL,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOa,GAAP;AACD,OAVH,WAWS,UAAAZ,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOC,KAAP;AACD,OAfH;AAgBD;AACF,GApBQ,EAoBN,CAACL,YAAD,CApBM,CAAT;AAsBA,SAAO;AACLO,IAAAA,MAAM,EAANA,MADK;AAELM,IAAAA,OAAO,EAAPA,OAFK;AAGLZ,IAAAA,IAAI,EAAJA,IAHK;AAILE,IAAAA,OAAO,EAAPA,OAJK;AAKLE,IAAAA,KAAK,EAALA;AALK,GAAP;AAOD;;AAEDN,MAAM,CAACqB,SAAP,GAAmB,EAAnB;AAEA,eAAerB,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTAP(access_token = \"\") {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const signUp = (data = { id: \"\", pass: \"\" }) => {\n    setLoading(true);\n    return axios\n      .post(\n        `http://${BASE_URL}/signup`,\n        { json: JSON.stringify(data) },\n        {\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        }\n      )\n      .catch(error => {\n        setError(error);\n        return error;\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  const overlap = id => {\n    setLoading(true);\n    return axios\n      .get(`http://${BASE_URL}/overlap/${id}`, {\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n      })\n      .catch(error => {\n        setError(error);\n        return error;\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios\n        .get(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          setLoading(false);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          setLoading(false);\n          return error;\n        });\n    }\n  }, [access_token]);\n\n  return {\n    signUp,\n    overlap,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTAP.propTypes = {};\n\nexport default useTAP;\n"]},"metadata":{},"sourceType":"module"}