{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Layout from \"../components/layouts/Layout\";\nimport ActionMyBar from \"../components/component/ActionMyBar\";\nimport { getPostCode } from \"../reducers/postsinfo\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"calc(100vh)\",\n    backgroundColor: \"rgb(240 240 240)\"\n  }\n}));\n\nconst Index = props => {\n  const classes = useStyles();\n  useEffect(() => {\n    props.getPostCode();\n  }, []);\n\n  const MyPage = __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(ActionMyBar, {\n    homeEnable: false,\n    title: props.post.title || \"포스트\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n\n  return __jsx(Layout, {\n    cookies: props.cookies,\n    content: MyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state.postsinfo.selectedPost\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getPostCode\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/pages/post.js"],"names":["useEffect","bindActionCreators","connect","makeStyles","Layout","ActionMyBar","getPostCode","useStyles","theme","root","minHeight","backgroundColor","Index","props","classes","MyPage","post","title","cookies","mapStateToProps","state","postsinfo","selectedPost","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,WAAP,MAAwB,qCAAxB;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,aADP;AAEJC,IAAAA,eAAe,EAAE;AAFb;AAD+B,CAAL,CAAN,CAA5B;;AAMA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACP,WAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMS,MAAM,GACV;AAAK,IAAA,SAAS,EAAED,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAE,KAAzB;AAAgC,IAAA,KAAK,EAAEI,KAAK,CAACG,IAAN,CAAWC,KAAX,IAAoB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAMA,SAAO,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,KAAK,CAACK,OAAvB;AAAgC,IAAA,OAAO,EAAEH,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAZD;;AAcA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEJ,IAAAA,IAAI,EAAEI,KAAK,CAACC,SAAN,CAAgBC;AAAxB,GAAP;AACD,CAFD;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IACjCvB,kBAAkB,CAAC;AAAEK,EAAAA;AAAF,CAAD,EAAkBkB,QAAlB,CADpB;;AAGA,eAAetB,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,KAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport Layout from \"../components/layouts/Layout\";\n\nimport ActionMyBar from \"../components/component/ActionMyBar\";\n\nimport { getPostCode } from \"../reducers/postsinfo\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"calc(100vh)\",\n    backgroundColor: \"rgb(240 240 240)\"\n  }\n}));\nconst Index = props => {\n  const classes = useStyles();\n  useEffect(() => {\n    props.getPostCode();\n  }, []);\n  const MyPage = (\n    <div className={classes.root}>\n      <ActionMyBar homeEnable={false} title={props.post.title || \"포스트\"} />\n    </div>\n  );\n\n  return <Layout cookies={props.cookies} content={MyPage} />;\n};\n\nconst mapStateToProps = state => {\n  return { post: state.postsinfo.selectedPost };\n};\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ getPostCode }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}