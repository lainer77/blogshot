{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { SET_FAVORITE_DOCTORS, GET_MYHOME_INFO, GET_FAVORITE_DOCTORS } from \"../actions/types\";\nimport axios from \"axios\";\nimport { set_loading } from \"./utilsinfo\";\nimport { set_kakao_logout } from \"./kakaoinfo\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nconst getAPI = loginkey => {\n  return axios.get(`https://${BASE_URL}/my/review/hospital/getAll`, {\n    headers: {\n      // 요청 헤더\n      \"X-Api-Key\": loginkey,\n      Authorization: `Bearer ${loginkey}`\n    },\n    timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n\n  });\n};\n\nconst getMyHomeAPI = loginkey => {\n  return axios.get(`https://${BASE_URL}/my/home/`, {\n    headers: {\n      // 요청 헤더\n      \"X-Api-Key\": loginkey // Authorization: `Bearer ${loginkey}`\n\n    },\n    timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n\n  });\n};\n\nconst getMyFavoriteAPI = (exUrl, loginkey, type) => {\n  if (type == \"post\") return axios.post(`https://${BASE_URL}/my/saved/doctor/${exUrl || \"\"}`, null, {\n    headers: {\n      // 요청 헤더\n      \"X-Api-Key\": loginkey\n    },\n    timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n\n  });\n  return axios[type || \"get\"](`https://${BASE_URL}/my/saved/doctor/${exUrl || \"\"}`, {\n    headers: {\n      // 요청 헤더\n      \"X-Api-Key\": loginkey\n    },\n    timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n\n  });\n};\n\nconst initialState = {\n  favorite_doctors: [],\n  review_cnt: null,\n  saved_docters: null,\n  user: null\n};\nexport const get_myhome_info = data => {\n  return (dispatch, getState) => {\n    set_loading(true)(dispatch, getState);\n    getMyHomeAPI(data).then(response => {\n      dispatch({\n        type: GET_MYHOME_INFO,\n        payload: {\n          infos: response.data\n        }\n      });\n      if (response.data.saved_docters.cnt_saved_docters <= 0) set_loading(false)(dispatch, getState);\n    }).catch(err => {\n      set_loading(false)(dispatch, getState);\n\n      if (err.response) {\n        let params;\n        if (err.response.status === 403) set_kakao_logout(localStorage.getItem(\"jwt_token\"))(dispatch, getState);\n      }\n    });\n  };\n};\nexport const get_favorite_doctors = cb => {\n  return (dispatch, getState) => {\n    let loginkey = localStorage.getItem(\"jwt_token\");\n    getMyFavoriteAPI(\"getall\", loginkey).then(response => {\n      // console.log(GET_FAVORITE_DOCTORS, response);\n      dispatch({\n        type: GET_FAVORITE_DOCTORS,\n        payload: {\n          list_doctor: response.data\n        }\n      });\n      if (cb) cb();\n    }).catch(err => {});\n  };\n};\nexport const set_favorite_doctors = (doctor_id, type) => {\n  return (dispatch, getState) => {\n    let loginkey = localStorage.getItem(\"jwt_token\");\n    getMyFavoriteAPI(doctor_id, loginkey, type).then(response => {\n      // console.log(response);\n      dispatch(SET_FAVORITE_DOCTORS);\n    }).catch(err => {});\n  };\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_FAVORITE_DOCTORS:\n      return _objectSpread({}, state);\n\n    case GET_FAVORITE_DOCTORS:\n      return _objectSpread({}, state, {\n        favorite_doctors: action.payload.list_doctor\n      });\n\n    case GET_MYHOME_INFO:\n      return _objectSpread({}, state, action.payload.infos);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/reducers/mypageinfo.js"],"names":["SET_FAVORITE_DOCTORS","GET_MYHOME_INFO","GET_FAVORITE_DOCTORS","axios","set_loading","set_kakao_logout","BASE_URL","API_TIME_OUT","getAPI","loginkey","get","headers","Authorization","timeout","getMyHomeAPI","getMyFavoriteAPI","exUrl","type","post","initialState","favorite_doctors","review_cnt","saved_docters","user","get_myhome_info","data","dispatch","getState","then","response","payload","infos","cnt_saved_docters","catch","err","params","status","localStorage","getItem","get_favorite_doctors","cb","list_doctor","set_favorite_doctors","doctor_id","state","action"],"mappings":"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","sourcesContent":["import {\n    SET_FAVORITE_DOCTORS,\n    GET_MYHOME_INFO,\n    GET_FAVORITE_DOCTORS\n} from \"../actions/types\";\n\nimport axios from \"axios\";\nimport { set_loading } from \"./utilsinfo\";\nimport { set_kakao_logout } from \"./kakaoinfo\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nconst getAPI = loginkey => {\n    return axios.get(`https://${BASE_URL}/my/review/hospital/getAll`, {\n        headers: {\n            // 요청 헤더\n            \"X-Api-Key\": loginkey,\n            Authorization: `Bearer ${loginkey}`\n        },\n        timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n    });\n};\nconst getMyHomeAPI = loginkey => {\n    return axios.get(`https://${BASE_URL}/my/home/`, {\n        headers: {\n            // 요청 헤더\n            \"X-Api-Key\": loginkey\n            // Authorization: `Bearer ${loginkey}`\n        },\n        timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n    });\n};\nconst getMyFavoriteAPI = (exUrl, loginkey, type) => {\n    if (type == \"post\")\n        return axios.post(\n            `https://${BASE_URL}/my/saved/doctor/${exUrl || \"\"}`,\n            null,\n            {\n                headers: {\n                    // 요청 헤더\n                    \"X-Api-Key\": loginkey\n                },\n                timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n            }\n        );\n    return axios[type || \"get\"](\n        `https://${BASE_URL}/my/saved/doctor/${exUrl || \"\"}`,\n        {\n            headers: {\n                // 요청 헤더\n                \"X-Api-Key\": loginkey\n            },\n            timeout: API_TIME_OUT / 3 // 10초 이내에 응답이 오지 않으면 에러로 간주\n        }\n    );\n};\n\nconst initialState = {\n    favorite_doctors: [],\n    review_cnt: null,\n    saved_docters: null,\n    user: null\n};\n\nexport const get_myhome_info = data => {\n    return (dispatch, getState) => {\n        set_loading(true)(dispatch, getState);\n        getMyHomeAPI(data)\n            .then(response => {\n                dispatch({\n                    type: GET_MYHOME_INFO,\n                    payload: {\n                        infos: response.data\n                    }\n                });\n                if (response.data.saved_docters.cnt_saved_docters <= 0)\n                    set_loading(false)(dispatch, getState);\n            })\n            .catch(err => {\n                set_loading(false)(dispatch, getState);\n                if (err.response) {\n                    let params;\n\n                    if (err.response.status === 403)\n                        set_kakao_logout(localStorage.getItem(\"jwt_token\"))(\n                            dispatch,\n                            getState\n                        );\n                }\n            });\n    };\n};\nexport const get_favorite_doctors = cb => {\n    return (dispatch, getState) => {\n        let loginkey = localStorage.getItem(\"jwt_token\");\n        getMyFavoriteAPI(\"getall\", loginkey)\n            .then(response => {\n                // console.log(GET_FAVORITE_DOCTORS, response);\n                dispatch({\n                    type: GET_FAVORITE_DOCTORS,\n                    payload: { list_doctor: response.data }\n                });\n                if (cb) cb();\n            })\n            .catch(err => {});\n    };\n};\nexport const set_favorite_doctors = (doctor_id, type) => {\n    return (dispatch, getState) => {\n        let loginkey = localStorage.getItem(\"jwt_token\");\n        getMyFavoriteAPI(doctor_id, loginkey, type)\n            .then(response => {\n                // console.log(response);\n                dispatch(SET_FAVORITE_DOCTORS);\n            })\n            .catch(err => {});\n    };\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FAVORITE_DOCTORS:\n            return {\n                ...state\n            };\n        case GET_FAVORITE_DOCTORS:\n            return {\n                ...state,\n                favorite_doctors: action.payload.list_doctor\n            };\n        case GET_MYHOME_INFO:\n            return {\n                ...state,\n                ...action.payload.infos\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}