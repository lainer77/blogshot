{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/pages/signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from \"@material-ui/styles\";\nimport Layout from \"../components/layouts/Layout\";\nimport { useRouter } from \"next/router\";\nimport { Card, Button, Collapse, CardActions, TextField, Checkbox, Typography, FormControlLabel, CircularProgress } from \"@material-ui/core\";\nimport { KeyboardArrowUp as ArrowUp, KeyboardArrowDown as ArrowDown } from \"@material-ui/icons\";\nimport { BASE_COLOR } from \"../styles/typography\";\nimport { useState, useEffect } from \"react\";\nimport { useTistoryLogin, useTistoryBlogs, useTAP } from \"../useActions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: BASE_COLOR,\n    minHeight: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  content: {\n    padding: \"0px 0px 0px\",\n    textAlign: \"center\"\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"20px 20px 10px\"\n  },\n  item: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"10px\",\n    flexDirection: \"column\"\n  },\n  itemHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"5px 10px\",\n    minWidth: \"450px\"\n  },\n  cardAction: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"baseline\",\n    padding: \"5px 10px\",\n    minWidth: \"450px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  content2: {\n    width: \"100%\"\n  },\n  wrapperInner: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    padding: \"10px 15px 15px\",\n    borderTop: \"1px solid lightgray\"\n  },\n  button: {\n    margin: \"5px\"\n  },\n  appName: {\n    color: \"white\",\n    textShadow: \"-1px -1px 0 blue, 1px -1px 0 blue, -1px 1px 0 blue, 1px 1px 0 blue\"\n  },\n  platformName: {\n    fontWeight: \"bold\"\n  },\n  label: {\n    fontWeight: \"bold\",\n    minWidth: \"50px\",\n    textAlign: \"left\"\n  },\n  blogs: {\n    border: \"2px solid lightgray\",\n    display: \"flex\",\n    margin: \"10px 0px 0px\",\n    padding: \"5px 5px 5px 20px\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  blogHead: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  center: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n})); // b2ef83a76d449d769f337eccd6afd2d8_53799dbf4a5e7fa29210ffbc3e3ca788\n\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  const {\n    0: id,\n    1: setId\n  } = useState();\n  const {\n    0: idError,\n    1: setIdError\n  } = useState();\n  const {\n    0: pass,\n    1: setPass\n  } = useState();\n  const {\n    0: passError,\n    1: setPassError\n  } = useState();\n  const {\n    overlap,\n    signUp,\n    loading\n  } = useTAP();\n  const {\n    0: isOverlap,\n    1: setIsOverlap\n  } = useState(false);\n  const {\n    0: naverChecked,\n    1: setNaverChecked\n  } = useState(false);\n  const {\n    0: tistoryChecked,\n    1: setTistoryChecked\n  } = useState(false);\n  const {\n    absolve,\n    access_token\n  } = useTistoryLogin();\n  const {\n    data,\n    absolve: absolve2\n  } = useTistoryBlogs(access_token);\n  const {\n    0: blogs,\n    1: setBlogs\n  } = useState([]);\n  const {\n    0: formData,\n    1: setFormData\n  } = useState([]);\n  useEffect(() => {\n    if (access_token && access_token !== \"undefined\") {\n      setTistoryChecked(true);\n    }\n  }, [access_token]);\n  useEffect(() => {\n    if (data && data.tistory) {\n      setBlogs(data.tistory.item.blogs);\n    }\n  }, [data]);\n\n  const MyPage = __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: classes.appName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"\\uACC4\\uC815\\uC0DD\\uC131 / \\uBE14\\uB85C\\uADF8\\uC14B\\uD305\"), __jsx(Card, {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, loading ? __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(CardActions, {\n    className: classes.cardAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(TextField, {\n    fullWidth: true,\n    error: idError,\n    onChange: e => {\n      setId(e.target.value);\n      setIdError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: () => {\n      // setNaverChecked(!naverChecked);\n      if (id && id !== \"\" && id !== \" \") {\n        overlap(id).then(res => {\n          console.log(res);\n          if (res.data && res.data.msg) alert(res.data.msg);\n          setIsOverlap(true);\n        }).catch(err => {\n          console.log(err, err.response);\n\n          if (err.response.status === 400) {\n            alert(err.response.data.msg);\n          }\n        });\n      } else alert(\"아이디를 입력하고 확인해 주세요!\");\n    },\n    style: {\n      minWidth: \"80px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"\\uC911\\uBCF5\\uAC80\\uC0AC\")), __jsx(CardActions, {\n    className: classes.cardAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(TextField, {\n    fullWidth: true,\n    error: passError,\n    onChange: e => {\n      setPass(e.target.value);\n      setPassError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }))), __jsx(Card, {\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(CardActions, {\n    className: classes.itemHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.platformName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"\\uB124\\uC774\\uBC84\"), __jsx(Button, {\n    endIcon: naverChecked ? __jsx(ArrowDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }) : __jsx(ArrowUp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }),\n    onClick: () => {// setNaverChecked(!naverChecked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\")), __jsx(Collapse, {\n    className: classes.content2,\n    classes: {\n      wrapperInner: classes.wrapperInner\n    },\n    in: naverChecked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    label: \"access_token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), __jsx(TextField, {\n    fullWidth: true,\n    label: \"access_token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), __jsx(TextField, {\n    fullWidth: true,\n    label: \"access_token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))), __jsx(Card, {\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(CardActions, {\n    className: classes.itemHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.platformName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"\\uD2F0\\uC2A4\\uD1A0\\uB9AC\"), __jsx(Button, {\n    endIcon: tistoryChecked ? __jsx(ArrowDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }) : __jsx(ArrowUp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }),\n    onClick: () => {\n      if (access_token && access_token !== \"undefined\") {\n        setTistoryChecked(!tistoryChecked);\n      } else {\n        absolve().then(res => {\n          setTistoryChecked(!tistoryChecked);\n          document.write(res.data);\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\")), __jsx(Collapse, {\n    className: classes.content2,\n    classes: {\n      wrapperInner: classes.wrapperInner\n    },\n    in: tistoryChecked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    value: access_token,\n    disabled: true,\n    label: \"access_token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), blogs.map((blog, index) => {\n    let form = {\n      access_token: access_token,\n      userId: data.tistory.item.userId,\n      id: data.tistory.item.id,\n      blogId: blog.blogId,\n      name: blog.name,\n      url: blog.url,\n      nickname: blog.nickname,\n      title: blog.title,\n      description: blog.description,\n      default: blog.default,\n      statistics_post: blog.statistics.post,\n      statistics_comment: blog.statistics.comment,\n      statistics_trackback: blog.statistics.trackback\n    };\n    let isBlog = data.tistory.item.blogIds.find(x => x === parseInt(blog.blogId));\n    return __jsx(\"div\", {\n      key: \"blog-\" + index,\n      className: classes.blogs,\n      style: {\n        borderColor: blog.default === \"Y\" ? \"darkblue\" : \"lightgray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.blogHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, __jsx(Typography, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, blog.default === \"Y\" && blog.nickname + \"님의 대표 블로그입니다.\"), __jsx(TextField, {\n      value: blog.name,\n      fullWidth: true,\n      disabled: true,\n      label: \"Blog Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), __jsx(TextField, {\n      value: blog.title,\n      fullWidth: true,\n      disabled: true,\n      label: \"Blog Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), __jsx(TextField, {\n      value: blog.nickname,\n      fullWidth: true,\n      disabled: true,\n      label: \"\\uC720\\uC800 \\uBCC4\\uBA85\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), __jsx(TextField, {\n      fullWidth: true,\n      value: blog.url,\n      disabled: true,\n      label: \"Blog Url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), __jsx(FormControlLabel, {\n      value: \"start\",\n      labelPlacement: \"start\",\n      style: {\n        minWidth: \"80px\"\n      },\n      control: __jsx(Checkbox, {\n        defaultChecked: false,\n        color: \"primary\",\n        value: \"default\",\n        checked: isBlog,\n        onChange: e => {\n          console.log(e.target.checked);\n          if (e.target.checked) setFormData([...formData, form]);else setFormData([...formData.filter(f => f.name !== blog.name)]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }),\n      label: \"\\uC0AC\\uC6A9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }));\n  }))))), __jsx(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      const result = window.confirm(\"변경된 내용을 저장하지 않고 취소하겠습니까?\");\n      if (result) route.push(\"/login\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, \"\\uCDE8\\uC18C\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      let iderr = false;\n      let passerr = false;\n\n      if (!id) {\n        setIdError(true);\n        iderr = true;\n      }\n\n      if (!pass) {\n        setPassError(true);\n        passerr = true;\n      }\n\n      if (!isOverlap) {\n        alert(\"중복검사를 먼저 실행해 주세요!\");\n        return;\n      }\n\n      if (iderr || passerr) {\n        alert(\"아이디와 비밀번호를 입력하세요!\");\n        return;\n      }\n\n      const result = window.confirm(\"입력하신 내용으로 가입 하겠습니까?\");\n\n      if (result) {\n        signUp(id, pass).then(sres => {\n          absolve2(formData).then(res => {\n            if (res.data && res.data.msg) {\n              alert(res.data.msg);\n            }\n          }).finally(() => {\n            route.push(\"/login\");\n          });\n        }); // .then(res => {\n        //   console.log(res);\n        //   if (res.code === 200) route.push(\"/login\");\n        // });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\"))));\n\n  return __jsx(Layout, {\n    cookies: props.cookies,\n    content: MyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/pages/signup.js"],"names":["makeStyles","Layout","useRouter","Card","Button","Collapse","CardActions","TextField","Checkbox","Typography","FormControlLabel","CircularProgress","KeyboardArrowUp","ArrowUp","KeyboardArrowDown","ArrowDown","BASE_COLOR","useState","useEffect","useTistoryLogin","useTistoryBlogs","useTAP","useStyles","theme","root","backgroundColor","minHeight","display","alignItems","justifyContent","content","padding","textAlign","card","flexDirection","item","marginBottom","itemHeader","minWidth","cardAction","actions","marginTop","content2","width","wrapperInner","borderTop","button","margin","appName","color","textShadow","platformName","fontWeight","label","blogs","border","blogHead","center","Index","props","classes","route","id","setId","idError","setIdError","pass","setPass","passError","setPassError","overlap","signUp","loading","isOverlap","setIsOverlap","naverChecked","setNaverChecked","tistoryChecked","setTistoryChecked","absolve","access_token","data","absolve2","setBlogs","formData","setFormData","tistory","MyPage","e","target","value","then","res","console","log","msg","alert","catch","err","response","status","document","write","map","blog","index","form","userId","blogId","name","url","nickname","title","description","default","statistics_post","statistics","post","statistics_comment","comment","statistics_trackback","trackback","isBlog","blogIds","find","x","parseInt","borderColor","checked","filter","f","result","window","confirm","push","iderr","passerr","sres","finally","cookies"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\n\nimport Layout from \"../components/layouts/Layout\";\n\nimport { useRouter } from \"next/router\";\nimport {\n  Card,\n  Button,\n  Collapse,\n  CardActions,\n  TextField,\n  Checkbox,\n  Typography,\n  FormControlLabel,\n  CircularProgress\n} from \"@material-ui/core\";\nimport {\n  KeyboardArrowUp as ArrowUp,\n  KeyboardArrowDown as ArrowDown\n} from \"@material-ui/icons\";\nimport { BASE_COLOR } from \"../styles/typography\";\nimport { useState, useEffect } from \"react\";\nimport { useTistoryLogin, useTistoryBlogs, useTAP } from \"../useActions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: BASE_COLOR,\n    minHeight: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  content: {\n    padding: \"0px 0px 0px\",\n    textAlign: \"center\"\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"20px 20px 10px\"\n  },\n  item: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"10px\",\n    flexDirection: \"column\"\n  },\n  itemHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"5px 10px\",\n    minWidth: \"450px\"\n  },\n  cardAction: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"baseline\",\n    padding: \"5px 10px\",\n    minWidth: \"450px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  content2: { width: \"100%\" },\n  wrapperInner: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    padding: \"10px 15px 15px\",\n    borderTop: \"1px solid lightgray\"\n  },\n  button: {\n    margin: \"5px\"\n  },\n  appName: {\n    color: \"white\",\n    textShadow:\n      \"-1px -1px 0 blue, 1px -1px 0 blue, -1px 1px 0 blue, 1px 1px 0 blue\"\n  },\n  platformName: {\n    fontWeight: \"bold\"\n  },\n  label: {\n    fontWeight: \"bold\",\n    minWidth: \"50px\",\n    textAlign: \"left\"\n  },\n  blogs: {\n    border: \"2px solid lightgray\",\n    display: \"flex\",\n    margin: \"10px 0px 0px\",\n    padding: \"5px 5px 5px 20px\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  blogHead: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  center: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n// b2ef83a76d449d769f337eccd6afd2d8_53799dbf4a5e7fa29210ffbc3e3ca788\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n\n  const [id, setId] = useState();\n  const [idError, setIdError] = useState();\n  const [pass, setPass] = useState();\n  const [passError, setPassError] = useState();\n\n  const { overlap, signUp, loading } = useTAP();\n  const [isOverlap, setIsOverlap] = useState(false);\n\n  const [naverChecked, setNaverChecked] = useState(false);\n  const [tistoryChecked, setTistoryChecked] = useState(false);\n  const { absolve, access_token } = useTistoryLogin();\n  const { data, absolve: absolve2 } = useTistoryBlogs(access_token);\n  const [blogs, setBlogs] = useState([]);\n  const [formData, setFormData] = useState([]);\n  useEffect(() => {\n    if (access_token && access_token !== \"undefined\") {\n      setTistoryChecked(true);\n    }\n  }, [access_token]);\n  useEffect(() => {\n    if (data && data.tistory) {\n      setBlogs(data.tistory.item.blogs);\n    }\n  }, [data]);\n  const MyPage = (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <h1 className={classes.appName}>계정생성 / 블로그셋팅</h1>\n        <Card className={classes.center}>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <div className={classes.card}>\n              <div className={classes.item}>\n                <CardActions className={classes.cardAction}>\n                  <span className={classes.label}>아이디</span>\n                  <TextField\n                    fullWidth\n                    error={idError}\n                    onChange={e => {\n                      setId(e.target.value);\n                      setIdError(false);\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      // setNaverChecked(!naverChecked);\n                      if (id && id !== \"\" && id !== \" \") {\n                        overlap(id)\n                          .then(res => {\n                            console.log(res);\n                            if (res.data && res.data.msg) alert(res.data.msg);\n                            setIsOverlap(true);\n                          })\n                          .catch(err => {\n                            console.log(err, err.response);\n                            if (err.response.status === 400) {\n                              alert(err.response.data.msg);\n                            }\n                          });\n                      } else alert(\"아이디를 입력하고 확인해 주세요!\");\n                    }}\n                    style={{ minWidth: \"80px\" }}\n                  >\n                    중복검사\n                  </Button>\n                </CardActions>\n                <CardActions className={classes.cardAction}>\n                  <span className={classes.label}>비밀번호</span>\n                  <TextField\n                    fullWidth\n                    error={passError}\n                    onChange={e => {\n                      setPass(e.target.value);\n                      setPassError(false);\n                    }}\n                  />\n                </CardActions>\n              </div>\n              <Card className={classes.item}>\n                <CardActions className={classes.itemHeader}>\n                  <span className={classes.platformName}>네이버</span>\n                  <Button\n                    endIcon={naverChecked ? <ArrowDown /> : <ArrowUp />}\n                    onClick={() => {\n                      // setNaverChecked(!naverChecked);\n                    }}\n                  >\n                    등록\n                  </Button>\n                </CardActions>\n                <Collapse\n                  className={classes.content2}\n                  classes={{ wrapperInner: classes.wrapperInner }}\n                  in={naverChecked}\n                >\n                  <TextField fullWidth label=\"access_token\" />\n                  <TextField fullWidth label=\"access_token\" />\n                  <TextField fullWidth label=\"access_token\" />\n                </Collapse>\n              </Card>\n              <Card className={classes.item}>\n                <CardActions className={classes.itemHeader}>\n                  <span className={classes.platformName}>티스토리</span>\n                  <Button\n                    endIcon={tistoryChecked ? <ArrowDown /> : <ArrowUp />}\n                    onClick={() => {\n                      if (access_token && access_token !== \"undefined\") {\n                        setTistoryChecked(!tistoryChecked);\n                      } else {\n                        absolve().then(res => {\n                          setTistoryChecked(!tistoryChecked);\n                          document.write(res.data);\n                        });\n                      }\n                    }}\n                  >\n                    등록\n                  </Button>\n                </CardActions>\n                <Collapse\n                  className={classes.content2}\n                  classes={{ wrapperInner: classes.wrapperInner }}\n                  in={tistoryChecked}\n                >\n                  <TextField\n                    fullWidth\n                    value={access_token}\n                    disabled\n                    label=\"access_token\"\n                  />\n                  {blogs.map((blog, index) => {\n                    let form = {\n                      access_token: access_token,\n\n                      userId: data.tistory.item.userId,\n                      id: data.tistory.item.id,\n\n                      blogId: blog.blogId,\n                      name: blog.name,\n                      url: blog.url,\n                      nickname: blog.nickname,\n                      title: blog.title,\n                      description: blog.description,\n                      default: blog.default,\n                      statistics_post: blog.statistics.post,\n                      statistics_comment: blog.statistics.comment,\n                      statistics_trackback: blog.statistics.trackback\n                    };\n                    let isBlog = data.tistory.item.blogIds.find(\n                      x => x === parseInt(blog.blogId)\n                    );\n\n                    return (\n                      <div\n                        key={\"blog-\" + index}\n                        className={classes.blogs}\n                        style={{\n                          borderColor:\n                            blog.default === \"Y\" ? \"darkblue\" : \"lightgray\"\n                        }}\n                      >\n                        <div className={classes.blogHead}>\n                          <Typography color=\"primary\">\n                            {blog.default === \"Y\" &&\n                              blog.nickname + \"님의 대표 블로그입니다.\"}\n                          </Typography>\n                          <TextField\n                            value={blog.name}\n                            fullWidth\n                            disabled\n                            label=\"Blog Name\"\n                          />\n                          <TextField\n                            value={blog.title}\n                            fullWidth\n                            disabled\n                            label=\"Blog Title\"\n                          />\n                          <TextField\n                            value={blog.nickname}\n                            fullWidth\n                            disabled\n                            label=\"유저 별명\"\n                          />\n                          <TextField\n                            fullWidth\n                            value={blog.url}\n                            disabled\n                            label=\"Blog Url\"\n                          />\n                        </div>\n                        <FormControlLabel\n                          value=\"start\"\n                          labelPlacement=\"start\"\n                          style={{ minWidth: \"80px\" }}\n                          control={\n                            <Checkbox\n                              defaultChecked={false}\n                              color=\"primary\"\n                              value=\"default\"\n                              checked={isBlog}\n                              onChange={e => {\n                                console.log(e.target.checked);\n                                if (e.target.checked)\n                                  setFormData([...formData, form]);\n                                else\n                                  setFormData([\n                                    ...formData.filter(\n                                      f => f.name !== blog.name\n                                    )\n                                  ]);\n                              }}\n                            />\n                          }\n                          label=\"사용\"\n                        />\n                      </div>\n                    );\n                  })}\n                </Collapse>\n              </Card>\n            </div>\n          )}\n        </Card>\n        <div className={classes.actions}>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              const result = window.confirm(\n                \"변경된 내용을 저장하지 않고 취소하겠습니까?\"\n              );\n              if (result) route.push(\"/login\");\n            }}\n          >\n            취소\n          </Button>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              let iderr = false;\n              let passerr = false;\n              if (!id) {\n                setIdError(true);\n                iderr = true;\n              }\n              if (!pass) {\n                setPassError(true);\n                passerr = true;\n              }\n              if (!isOverlap) {\n                alert(\"중복검사를 먼저 실행해 주세요!\");\n                return;\n              }\n\n              if (iderr || passerr) {\n                alert(\"아이디와 비밀번호를 입력하세요!\");\n                return;\n              }\n\n              const result = window.confirm(\n                \"입력하신 내용으로 가입 하겠습니까?\"\n              );\n              if (result) {\n                signUp(id, pass).then(sres => {\n                  absolve2(formData)\n                    .then(res => {\n                      if (res.data && res.data.msg) {\n                        alert(res.data.msg);\n                      }\n                    })\n                    .finally(() => {\n                      route.push(\"/login\");\n                    });\n                });\n                // .then(res => {\n                //   console.log(res);\n                //   if (res.code === 200) route.push(\"/login\");\n                // });\n              }\n            }}\n          >\n            저장\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return <Layout cookies={props.cookies} content={MyPage} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}