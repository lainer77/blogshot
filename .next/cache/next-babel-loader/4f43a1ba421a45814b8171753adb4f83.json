{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Layout from \"../components/layouts/Layout\";\nimport ActionMyBar from \"../components/component/ActionMyBar\";\nimport { getPostCode } from \"../reducers/postsinfo\";\nimport { useRouter } from \"next/router\";\nimport { TextField, FormControl, Card, Button } from \"@material-ui/core\";\nimport { BASE_COLOR } from \"../styles/typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: BASE_COLOR,\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  content: {\n    padding: \"0px 0px 0px\",\n    textAlign: \"center\"\n  },\n  card: {\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"5px 30px 20px\"\n  },\n  textField: {\n    margin: \"0px 0px 10px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    margin: \"5px\"\n  }\n}));\n\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  console.log(props.post);\n  useEffect(() => {\n    props.getPostCode(route.query.code);\n  }, []);\n\n  const MyPage = __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"BlogShot\"), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.textField,\n    fullWidth: true,\n    label: \"로그인\",\n    defaultValue: props.post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"standard-password-input\",\n    className: classes.textField,\n    type: \"password\",\n    label: \"비밀번호\",\n    defaultValue: props.post.context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\uBE14\\uB85C\\uADF8 \\uC14B\\uD305\"))));\n\n  return __jsx(Layout, {\n    cookies: props.cookies,\n    content: MyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state.postsinfo.selectedPost\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getPostCode\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/pages/login.js"],"names":["useEffect","bindActionCreators","connect","makeStyles","Layout","ActionMyBar","getPostCode","useRouter","TextField","FormControl","Card","Button","BASE_COLOR","useStyles","theme","root","backgroundColor","height","display","alignItems","justifyContent","content","padding","textAlign","card","textField","margin","actions","marginTop","button","Index","props","classes","route","console","log","post","query","code","MyPage","title","context","cookies","mapStateToProps","state","postsinfo","selectedPost","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport Layout from \"../components/layouts/Layout\";\n\nimport ActionMyBar from \"../components/component/ActionMyBar\";\n\nimport { getPostCode } from \"../reducers/postsinfo\";\nimport { useRouter } from \"next/router\";\nimport { TextField, FormControl, Card, Button } from \"@material-ui/core\";\nimport { BASE_COLOR } from \"../styles/typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: BASE_COLOR,\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  content: {\n    padding: \"0px 0px 0px\",\n    textAlign: \"center\"\n  },\n  card: {\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"5px 30px 20px\"\n  },\n  textField: {\n    margin: \"0px 0px 10px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    margin: \"5px\"\n  }\n}));\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  console.log(props.post);\n  useEffect(() => {\n    props.getPostCode(route.query.code);\n  }, []);\n  const MyPage = (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <h2>BlogShot</h2>\n        <Card className={classes.card}>\n          <FormControl fullWidth variant=\"outlined\">\n            <TextField\n              className={classes.textField}\n              fullWidth\n              label={\"로그인\"}\n              defaultValue={props.post.title}\n            />\n            <TextField\n              id=\"standard-password-input\"\n              className={classes.textField}\n              type=\"password\"\n              label={\"비밀번호\"}\n              defaultValue={props.post.context}\n            />\n          </FormControl>\n        </Card>\n        <div className={classes.actions}>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            로그인\n          </Button>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"default\"\n          >\n            블로그 셋팅\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return <Layout cookies={props.cookies} content={MyPage} />;\n};\n\nconst mapStateToProps = state => {\n  return { post: state.postsinfo.selectedPost };\n};\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ getPostCode }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}