{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/components/panel/SignUpPanel.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport styled from \"styled-components\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    input: {\n      padding: \"15px 10px\"\n    },\n    inputs: {\n      padding: \"25px 0 35px\"\n    }\n  };\n});\n\nvar TextF = function TextF(props) {\n  var classes = useStyles();\n\n  var label = props.label,\n      value = props.value,\n      others = _objectWithoutProperties(props, [\"label\", \"value\"]);\n\n  return React.createElement(TextField, _extends({\n    id: \"standard-full-width\",\n    label: label // placeholder=\"Placeholder\"\n    // helperText=\"Full width!\"\n    ,\n    margin: \"normal\",\n    defaultValue: value,\n    InputLabelProps: {\n      shrink: true,\n      style: {\n        fontSize: \"14px\",\n        lineHeight: \"20px\",\n        letterSpacing: 0,\n        color: \"rgb(41 41 41)\",\n        transform: \"scale(1)\"\n      }\n    },\n    InputProps: {\n      style: {\n        fontSize: \"16px\",\n        fontWeight: \"bold\",\n        lineHeight: \"20px\",\n        letterSpacing: 0,\n        color: \"rgb(41 41 41)\",\n        marginTop: \"30px\",\n        borderRadius: 0\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, others, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nvar SignUpPanel = function SignUpPanel(props) {\n  var classes = useStyles();\n  var name_label = props.name_label,\n      name = props.name,\n      email = props.email,\n      email_label = props.email_label,\n      phone = props.phone,\n      phone_label = props.phone_label,\n      setName = props.setName,\n      setEmail = props.setEmail,\n      setPhone = props.setPhone;\n\n  var _useState = useState({\n    dis_email: false,\n    dis_phone: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      disabledes = _useState2[0],\n      setDisabledes = _useState2[1];\n\n  useEffect(function () {\n    var params = {};\n\n    if (phone) {\n      params.dis_phone = true;\n    }\n\n    if (email) {\n      params.dis_email = true;\n    }\n\n    setDisabledes(params);\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inputs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TextF, {\n    label: name_label,\n    value: name,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      setName(e.currentTarget.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(TextF, {\n    label: email_label,\n    value: email // disabled={disabledes.dis_email}\n    ,\n    disabled: true // variant={disabledes.dis_email ? \"filled\" : \"standard\"}\n    ,\n    variant: \"filled\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      setEmail(e.currentTarget.value);\n    },\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(TextF, {\n    label: phone_label,\n    value: phone // disabled={disabledes.dis_phone}\n    ,\n    disabled: true // variant={disabledes.dis_phone ? \"filled\" : \"standard\"}\n    ,\n    variant: \"filled\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      setPhone(e.currentTarget.value);\n    },\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n};\n\nexport default SignUpPanel;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/components/panel/SignUpPanel.js"],"names":["React","useEffect","useState","PropTypes","TextField","makeStyles","styled","useStyles","theme","root","input","padding","inputs","TextF","props","classes","label","value","others","shrink","style","fontSize","lineHeight","letterSpacing","color","transform","fontWeight","marginTop","borderRadius","SignUpPanel","name_label","name","email","email_label","phone","phone_label","setName","setEmail","setPhone","dis_email","dis_phone","disabledes","setDisabledes","params","e","currentTarget"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport styled from \"styled-components\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    input: {\n        padding: \"15px 10px\"\n    },\n    inputs: {\n        padding: \"25px 0 35px\"\n    }\n}));\n\nconst TextF = props => {\n    const classes = useStyles();\n    const { label, value, ...others } = props;\n\n    return (\n        <TextField\n            id=\"standard-full-width\"\n            label={label}\n            // placeholder=\"Placeholder\"\n            // helperText=\"Full width!\"\n            margin=\"normal\"\n            defaultValue={value}\n            InputLabelProps={{\n                shrink: true,\n                style: {\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                    letterSpacing: 0,\n                    color: \"rgb(41 41 41)\",\n                    transform: \"scale(1)\"\n                }\n            }}\n            InputProps={{\n                style: {\n                    fontSize: \"16px\",\n                    fontWeight: \"bold\",\n                    lineHeight: \"20px\",\n                    letterSpacing: 0,\n                    color: \"rgb(41 41 41)\",\n                    marginTop: \"30px\",\n                    borderRadius: 0\n                },\n                classes: { input: classes.input }\n            }}\n            {...others}\n        />\n    );\n};\n\nconst SignUpPanel = props => {\n    const classes = useStyles();\n\n    const {\n        name_label,\n        name,\n        email,\n        email_label,\n        phone,\n        phone_label,\n        setName,\n        setEmail,\n        setPhone\n    } = props;\n\n    const [disabledes, setDisabledes] = useState({\n        dis_email: false,\n        dis_phone: false\n    });\n    useEffect(() => {\n        let params = {};\n        if (phone) {\n            params.dis_phone = true;\n        }\n        if (email) {\n            params.dis_email = true;\n        }\n        setDisabledes(params);\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.inputs}>\n                <TextF\n                    label={name_label}\n                    value={name}\n                    fullWidth\n                    onChange={e => {\n                        setName(e.currentTarget.value);\n                    }}\n                />\n                <TextF\n                    label={email_label}\n                    value={email}\n                    // disabled={disabledes.dis_email}\n                    disabled={true}\n                    // variant={disabledes.dis_email ? \"filled\" : \"standard\"}\n                    variant={\"filled\"}\n                    fullWidth\n                    onChange={e => {\n                        setEmail(e.currentTarget.value);\n                    }}\n                    type=\"email\"\n                />\n                <TextF\n                    label={phone_label}\n                    value={phone}\n                    // disabled={disabledes.dis_phone}\n                    disabled={true}\n                    // variant={disabledes.dis_phone ? \"filled\" : \"standard\"}\n                    variant={\"filled\"}\n                    fullWidth\n                    onChange={e => {\n                        setPhone(e.currentTarget.value);\n                    }}\n                    type=\"text\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default SignUpPanel;\n"]},"metadata":{},"sourceType":"module"}