{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/components/popup/LoadingPopup.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    && {\\n        position: absolute;\\n        z-index: 10;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        outline: \\\"none\\\";\\n        width: fit-content;\\n        /* border: 1px solid black; */\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../layouts/PopupLayout\";\nimport theme from \"../../theme\";\nimport { pTr } from \"../../styles/typography\";\nimport { Typography, Fade, Paper } from \"@material-ui/core\";\nimport LoadIcon from \"../Icon/LoadIcon\";\n\nfunction getModalStyle() {\n  var top = 50;\n  var left = 50;\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\"),\n    borderRadius: pTr(6)\n  };\n} //#region\n\n\nvar PaperStyle = styled.div(_templateObject());\n\nvar LoadingPopup = function LoadingPopup(props) {\n  var children = props.children,\n      loading = props.loading,\n      onClose = props.onClose;\n  return __jsx(PaperStyle, {\n    style: getModalStyle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(LoadIcon, {\n    style: {\n      width: \"120px\",\n      height: \"120px\"\n    },\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nexport default function Index(props) {\n  var loading = props.loading,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"loading\", \"onClose\"]);\n\n  var _useState = useState(\"hidden\"),\n      visibility = _useState[0],\n      setVisibility = _useState[1];\n\n  useEffect(function () {\n    if (loading) {\n      setVisibility(\"visible\");\n    } else {\n      setVisibility(\"hidden\");\n    }\n  }, [loading]);\n  return __jsx(Layout, _extends({\n    open: loading,\n    onClose: onClose,\n    content: LoadingPopup,\n    loading: loading,\n    visibility: visibility\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/components/popup/LoadingPopup.js"],"names":["React","useEffect","useState","styled","Layout","theme","pTr","Typography","Fade","Paper","LoadIcon","getModalStyle","top","left","transform","borderRadius","PaperStyle","div","LoadingPopup","props","children","loading","onClose","width","height","Index","other","visibility","setVisibility"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,GAAT,QAAoB,yBAApB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,mBAAxC;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,SAASC,aAAT,GAAyB;AACrB,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,IAAI,GAAG,EAAb;AAEA,SAAO;AACHD,IAAAA,GAAG,YAAKA,GAAL,MADA;AAEHC,IAAAA,IAAI,YAAKA,IAAL,MAFD;AAGHC,IAAAA,SAAS,uBAAgBF,GAAhB,iBAA0BC,IAA1B,OAHN;AAIHE,IAAAA,YAAY,EAAET,GAAG,CAAC,CAAD;AAJd,GAAP;AAMH,C,CAED;;;AACA,IAAMU,UAAU,GAAGb,MAAM,CAACc,GAAV,mBAAhB;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MAClBC,QADkB,GACaD,KADb,CAClBC,QADkB;AAAA,MACRC,OADQ,GACaF,KADb,CACRE,OADQ;AAAA,MACCC,OADD,GACaH,KADb,CACCG,OADD;AAE1B,SACI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEX,aAAa,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KADX;AAEI,IAAA,OAAO,EAAEH,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAQH,CAVD;;AAYA,eAAe,SAASI,KAAT,CAAeN,KAAf,EAAsB;AAAA,MACzBE,OADyB,GACMF,KADN,CACzBE,OADyB;AAAA,MAChBC,OADgB,GACMH,KADN,CAChBG,OADgB;AAAA,MACJI,KADI,4BACMP,KADN;;AAAA,kBAEGjB,QAAQ,CAAC,QAAD,CAFX;AAAA,MAE1ByB,UAF0B;AAAA,MAEdC,aAFc;;AAGjC3B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIoB,OAAJ,EAAa;AACTO,MAAAA,aAAa,CAAC,SAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,QAAD,CAAb;AACH;AACJ,GANQ,EAMN,CAACP,OAAD,CANM,CAAT;AAOA,SACI,MAAC,MAAD;AACI,IAAA,IAAI,EAAEA,OADV;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,OAAO,EAAEJ,YAHb;AAII,IAAA,OAAO,EAAEG,OAJb;AAKI,IAAA,UAAU,EAAEM;AALhB,KAMQD,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Layout from \"../layouts/PopupLayout\";\nimport theme from \"../../theme\";\n\nimport { pTr } from \"../../styles/typography\";\nimport { Typography, Fade, Paper } from \"@material-ui/core\";\nimport LoadIcon from \"../Icon/LoadIcon\";\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n        borderRadius: pTr(6)\n    };\n}\n\n//#region\nconst PaperStyle = styled.div`\n    && {\n        position: absolute;\n        z-index: 10;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        outline: \"none\";\n        width: fit-content;\n        /* border: 1px solid black; */\n    }\n`;\nconst LoadingPopup = props => {\n    const { children, loading, onClose } = props;\n    return (\n        <PaperStyle style={getModalStyle()}>\n            <LoadIcon\n                style={{ width: \"120px\", height: \"120px\" }}\n                loading={loading}\n            ></LoadIcon>\n        </PaperStyle>\n    );\n};\n\nexport default function Index(props) {\n    const { loading, onClose, ...other } = props;\n    const [visibility, setVisibility] = useState(\"hidden\");\n    useEffect(() => {\n        if (loading) {\n            setVisibility(\"visible\");\n        } else {\n            setVisibility(\"hidden\");\n        }\n    }, [loading]);\n    return (\n        <Layout\n            open={loading}\n            onClose={onClose}\n            content={LoadingPopup}\n            loading={loading}\n            visibility={visibility}\n            {...other}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}