{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTistoryBlogs(access_token = \"\") {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n\n  const absolve = (datas = []) => {\n    if (access_token) {\n      setLoading(true);\n      datas.map(data => {\n        console.log(data);\n        axios.post(`http://${BASE_URL}/tistory/blogs`, _objectSpread({}, data, {\n          headers: {\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n          }\n        }), {\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n        }).catch(error => {\n          setError(error);\n          return error;\n        }).finally(() => {\n          setLoading(false);\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios.get(`http://${BASE_URL}/tistory/blogs`, {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n        return res;\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n    }\n  }, [access_token]);\n  return {\n    absolve,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTistoryBlogs.propTypes = {};\nexport default useTistoryBlogs;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTistoryBlogs.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useTistoryBlogs","access_token","data","setData","loading","setLoading","error","setError","absolve","datas","map","console","log","post","headers","timeout","catch","finally","get","params","then","res","propTypes"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,eAAT,CAAyBC,YAAY,GAAG,EAAxC,EAA4C;AAC1C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,EAAlC;;AAEA,QAAMc,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAC9B,QAAIR,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,KAAK,CAACC,GAAN,CAAUR,IAAI,IAAI;AAChBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAL,QAAAA,KAAK,CACFgB,IADH,CAEK,UAASf,QAAS,gBAFvB,oBAISI,IAJT;AAKMY,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AALf,YAOI;AACEC,UAAAA,OAAO,EAAEhB,YAAY,GAAG,CAD1B,CAC4B;;AAD5B,SAPJ,EAWGiB,KAXH,CAWSV,KAAK,IAAI;AACdC,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,iBAAOA,KAAP;AACD,SAdH,EAeGW,OAfH,CAeW,MAAM;AACbZ,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAjBH;AAkBD,OApBD;AAqBD;AACF,GAzBD;;AA2BAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,MAAAA,KAAK,CACFqB,GADH,CACQ,UAASpB,QAAS,gBAD1B,EAC2C;AACvCqB,QAAAA,MAAM,EAAE;AAAElB,UAAAA,YAAY,EAAEA;AAAhB,SAD+B;AAEvCc,QAAAA,OAAO,EAAEhB,YAAY,GAAG,CAFe,CAEb;;AAFa,OAD3C,EAKGqB,IALH,CAKQC,GAAG,IAAI;AACXV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACnB,IAAhB;AACAC,QAAAA,OAAO,CAACkB,GAAG,CAACnB,IAAL,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOgB,GAAP;AACD,OAVH,EAWGL,KAXH,CAWSV,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOC,KAAP;AACD,OAfH;AAgBD;AACF,GApBQ,EAoBN,CAACL,YAAD,CApBM,CAAT;AAsBA,SAAO;AACLO,IAAAA,OADK;AAELN,IAAAA,IAFK;AAGLE,IAAAA,OAHK;AAILE,IAAAA;AAJK,GAAP;AAMD;;AAEDN,eAAe,CAACsB,SAAhB,GAA4B,EAA5B;AAEA,eAAetB,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTistoryBlogs(access_token = \"\") {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const absolve = (datas = []) => {\n    if (access_token) {\n      setLoading(true);\n      datas.map(data => {\n        console.log(data);\n        axios\n          .post(\n            `http://${BASE_URL}/tistory/blogs`,\n            {\n              ...data,\n              headers: { \"Content-type\": \"application/x-www-form-urlencoded\" }\n            },\n            {\n              timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n            }\n          )\n          .catch(error => {\n            setError(error);\n            return error;\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios\n        .get(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          setLoading(false);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          setLoading(false);\n          return error;\n        });\n    }\n  }, [access_token]);\n\n  return {\n    absolve,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTistoryBlogs.propTypes = {};\n\nexport default useTistoryBlogs;\n"]},"metadata":{},"sourceType":"module"}