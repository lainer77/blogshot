{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\nimport { useRouter } from \"next/router\";\n\nfunction useDataList(tableName, params = {\n  limit: 100\n}) {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const route = useRouter(); //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios.get(`http://${BASE_URL}/${tableName}`, {\n      params: params,\n      timeout: API_TIME_OUT / 2,\n      // 15초 이내에 응답이 오지 않으면 에러로 간주\n      headers: {\n        \"x-api-key\": token\n      }\n    }).then(res => {\n      setData(res.data);\n      setLoading(false); // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n      if (error.response && error.response.data && error.response.data.msg) alert(error.response.data.msg);\n\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"rjt\");\n        route.push(\"/login\", \"/\");\n      }\n\n      setLoading(false);\n    });\n  }, []);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\nuseDataList.propTypes = {};\nexport default useDataList;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useDataList.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useRouter","useDataList","tableName","params","limit","data","setData","loading","setLoading","error","setError","route","token","localStorage","getItem","get","timeout","headers","then","res","catch","console","log","response","msg","alert","status","removeItem","push","propTypes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,MAAM,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAzC,EAAyD;AACvD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACe,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,QAAQ,EAAlC;AACA,QAAMiB,KAAK,GAAGX,SAAS,EAAvB,CAJuD,CAKvD;;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;AACAjB,IAAAA,KAAK,CACFkB,GADH,CACQ,UAASjB,QAAS,IAAGI,SAAU,EADvC,EAC0C;AACtCC,MAAAA,MAAM,EAAEA,MAD8B;AAEtCa,MAAAA,OAAO,EAAEjB,YAAY,GAAG,CAFc;AAEX;AAC3BkB,MAAAA,OAAO,EAAE;AACP,qBAAaL;AADN;AAH6B,KAD1C,EAQGM,IARH,CAQQC,GAAG,IAAI;AACXb,MAAAA,OAAO,CAACa,GAAG,CAACd,IAAL,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFW,CAGX;AACD,KAZH,EAaGY,KAbH,CAaSX,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,UAAIA,KAAK,CAACc,QAAN,IAAkBd,KAAK,CAACc,QAAN,CAAelB,IAAjC,IAAyCI,KAAK,CAACc,QAAN,CAAelB,IAAf,CAAoBmB,GAAjE,EACEC,KAAK,CAAChB,KAAK,CAACc,QAAN,CAAelB,IAAf,CAAoBmB,GAArB,CAAL;;AACF,UAAIf,KAAK,CAACc,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;AACjCb,QAAAA,YAAY,CAACc,UAAb,CAAwB,KAAxB;AACAhB,QAAAA,KAAK,CAACiB,IAAN,CAAW,QAAX,EAAqB,GAArB;AACD;;AACDpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAvBH;AAwBD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,SAAO;AAAEH,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD;;AAEDR,WAAW,CAAC4B,SAAZ,GAAwB,EAAxB;AAEA,eAAe5B,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\nimport { useRouter } from \"next/router\";\n\nfunction useDataList(tableName, params = { limit: 100 }) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const route = useRouter();\n  //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios\n      .get(`http://${BASE_URL}/${tableName}`, {\n        params: params,\n        timeout: API_TIME_OUT / 2, // 15초 이내에 응답이 오지 않으면 에러로 간주\n        headers: {\n          \"x-api-key\": token\n        }\n      })\n      .then(res => {\n        setData(res.data);\n        setLoading(false);\n        // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n        if (error.response && error.response.data && error.response.data.msg)\n          alert(error.response.data.msg);\n        if (error.response.status === 401) {\n          localStorage.removeItem(\"rjt\");\n          route.push(\"/login\", \"/\");\n        }\n        setLoading(false);\n      });\n  }, []);\n\n  return { data, loading, error };\n}\n\nuseDataList.propTypes = {};\n\nexport default useDataList;\n"]},"metadata":{},"sourceType":"module"}