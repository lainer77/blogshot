{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nvar encodeForm = function encodeForm(data) {\n  return _Object$keys(data).map(function (key) {\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]);\n  }).join(\"&\");\n};\n\nfunction useTistoryBlogs() {\n  var access_token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var absolve = function absolve() {\n    var datas = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if (access_token) {\n      setLoading(true);\n      console.log(data);\n      axios.post(\"http://\".concat(BASE_URL, \"/tistory/blogs\"), encodeForm(data), {\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      })[\"catch\"](function (error) {\n        setError(error);\n        return error;\n      })[\"finally\"](function () {\n        setLoading(false);\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (access_token) {\n      setLoading(true);\n      axios.get(\"http://\".concat(BASE_URL, \"/tistory/blogs\"), {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(function (res) {\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n        return res;\n      })[\"catch\"](function (error) {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n    }\n  }, [access_token]);\n  return {\n    absolve: absolve,\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseTistoryBlogs.propTypes = {};\nexport default useTistoryBlogs;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTistoryBlogs.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","encodeForm","data","map","key","encodeURIComponent","join","useTistoryBlogs","access_token","setData","loading","setLoading","error","setError","absolve","datas","console","log","post","timeout","get","params","then","res","propTypes"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACzB,SAAO,aAAYA,IAAZ,EACJC,GADI,CACA,UAAAC,GAAG;AAAA,WAAIC,kBAAkB,CAACD,GAAD,CAAlB,GAA0B,GAA1B,GAAgCC,kBAAkB,CAACH,IAAI,CAACE,GAAD,CAAL,CAAtD;AAAA,GADH,EAEJE,IAFI,CAEC,GAFD,CAAP;AAGD,CAJD;;AAMA,SAASC,eAAT,GAA4C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;;AAAA,kBAClBb,QAAQ,EADU;AAAA,MACnCO,IADmC;AAAA,MAC7BO,OAD6B;;AAAA,mBAEZd,QAAQ,CAAC,KAAD,CAFI;AAAA,MAEnCe,OAFmC;AAAA,MAE1BC,UAF0B;;AAAA,mBAGhBhB,QAAQ,EAHQ;AAAA,MAGnCiB,KAHmC;AAAA,MAG5BC,QAH4B;;AAK1C,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAgB;AAAA,QAAfC,KAAe,uEAAP,EAAO;;AAC9B,QAAIP,YAAJ,EAAkB;AAChBG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAJ,MAAAA,KAAK,CACFoB,IADH,kBACkBnB,QADlB,qBAC4CE,UAAU,CAACC,IAAD,CADtD,EAC8D;AAC1DiB,QAAAA,OAAO,EAAEnB,YAAY,GAAG,CADkC,CAChC;;AADgC,OAD9D,WAIS,UAAAY,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,eAAOA,KAAP;AACD,OAPH,aAQW,YAAM;AACbD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAVH;AAWD;AACF,GAhBD;;AAkBAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,YAAJ,EAAkB;AAChBG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAb,MAAAA,KAAK,CACFsB,GADH,kBACiBrB,QADjB,qBAC2C;AACvCsB,QAAAA,MAAM,EAAE;AAAEb,UAAAA,YAAY,EAAEA;AAAhB,SAD+B;AAEvCW,QAAAA,OAAO,EAAEnB,YAAY,GAAG,CAFe,CAEb;;AAFa,OAD3C,EAKGsB,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACrB,IAAhB;AACAO,QAAAA,OAAO,CAACc,GAAG,CAACrB,IAAL,CAAP;AACAS,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOY,GAAP;AACD,OAVH,WAWS,UAAAX,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOC,KAAP;AACD,OAfH;AAgBD;AACF,GApBQ,EAoBN,CAACJ,YAAD,CApBM,CAAT;AAsBA,SAAO;AACLM,IAAAA,OAAO,EAAPA,OADK;AAELZ,IAAAA,IAAI,EAAJA,IAFK;AAGLQ,IAAAA,OAAO,EAAPA,OAHK;AAILE,IAAAA,KAAK,EAALA;AAJK,GAAP;AAMD;;AAEDL,eAAe,CAACiB,SAAhB,GAA4B,EAA5B;AAEA,eAAejB,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nconst encodeForm = data => {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n};\n\nfunction useTistoryBlogs(access_token = \"\") {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const absolve = (datas = []) => {\n    if (access_token) {\n      setLoading(true);\n      console.log(data);\n      axios\n        .post(`http://${BASE_URL}/tistory/blogs`, encodeForm(data), {\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .catch(error => {\n          setError(error);\n          return error;\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios\n        .get(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          setLoading(false);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          setLoading(false);\n          return error;\n        });\n    }\n  }, [access_token]);\n\n  return {\n    absolve,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTistoryBlogs.propTypes = {};\n\nexport default useTistoryBlogs;\n"]},"metadata":{},"sourceType":"module"}