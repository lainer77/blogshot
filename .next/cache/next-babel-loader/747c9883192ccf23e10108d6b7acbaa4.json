{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_KAKAO_INFO, SET_KAKAO_LOGIN, SET_KAKAO_LOGOUT, FIXED_LOGIN, LOGIN_TOKEN_CHECK } from \"../actions/types\";\nimport { set_cookie, set_loading, set_message, message_open } from \"./utilsinfo\";\nimport api from \"../logic/asMedicoAPI\";\nconst initialState = {\n  is_login: false,\n  login: null,\n  is_validateNo: false\n};\nexport function set_kakao_logout(loginkey) {\n  return (dispatch, getState) => {\n    set_loading(true)(dispatch, getState);\n    api.postKey(null, \"/My/logout\", loginkey).then(response => {\n      set_message(\"로그아웃 되었습니다.\")(dispatch, getState);\n      dispatch({\n        type: SET_KAKAO_LOGOUT\n      });\n      localStorage.removeItem(\"jwt_token\");\n      localStorage.removeItem(\"photo_url\");\n    }).catch(err => {\n      console.error(err);\n      set_loading(false)(dispatch, getState);\n      localStorage.removeItem(\"jwt_token\");\n      localStorage.removeItem(\"photo_url\");\n      dispatch({\n        type: SET_KAKAO_LOGOUT\n      });\n    });\n  };\n}\nexport function set_kakao_info(data, msg) {\n  return (dispatch, getState) => {\n    let params = data;\n    let jwt_token = getState().kakaoinfo.login.jwt_token || localStorage.getItem(\"jwt_token\");\n\n    if (!jwt_token) {\n      set_kakao_logout(data)(dispatch, getState);\n    } else {\n      params.jwt_token = jwt_token;\n    }\n\n    api.post(params, \"/kakao/signupComplete\").then(response => {\n      message_open(msg || response.data.msg || response.data[\"application/json\"].msg)(dispatch, getState);\n      dispatch({\n        type: SET_KAKAO_INFO,\n        payload: {\n          loginInfo: {\n            kakaoProp: response.data.msg.kakaoProp\n          }\n        }\n      });\n    }).catch(err => {// console.error(err);\n    });\n  };\n}\nexport function validate_token(token, noLogout) {\n  return async (dispatch, getState) => {\n    let params = {};\n    let jwt_token = token || localStorage.getItem(\"jwt_token\");\n    if (!jwt_token) return false;\n    params.jwt_token = jwt_token;\n    let response;\n    let is_validateNo = false;\n\n    try {\n      response = await api.post(params, \"/kakao/validateToken\");\n\n      if (response.data.code === 1) {\n        is_validateNo = true;\n        if (!noLogout) set_kakao_logout(jwt_token)(dispatch, getState);\n      }\n\n      dispatch({\n        type: LOGIN_TOKEN_CHECK,\n        payload: {\n          is_validateNo: is_validateNo\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    return is_validateNo;\n  };\n}\nexport function set_kakao_login(data) {\n  return async (dispatch, getState) => {\n    if (!localStorage.getItem(\"jwt_token\")) {\n      let response = await api.post(data, \"/kakao/login\");\n      set_cookie(\"jwt_token\", response.data.msg.jwt_token)(dispatch, getState);\n      if (response.data.msg.kakaoProp) set_cookie(\"kakaoProp\", JSON.stringify(response.data.msg.kakaoProp))(dispatch, getState);\n      if (response.data.msg.kakaoProp) set_cookie(\"photo_url\", response.data.msg.kakaoProp.photo_url)(dispatch, getState); // const valid = await validate_token(response.data.msg.jwt_token)(\n      //     dispatch,\n      //     getState\n      // );\n\n      dispatch({\n        type: SET_KAKAO_LOGIN,\n        payload: {\n          loginInfo: {\n            jwt_token: response.data.msg.jwt_token,\n            kakaoProp: response.data.msg.kakaoProp,\n            is_login: false\n          }\n        }\n      });\n    }\n  };\n}\nexport function get_kakao_info(response) {\n  return (dispatch, getState) => {};\n}\n\nconst index = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_KAKAO_INFO:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: action.payload.loginInfo.jwt_token,\n          kakaoProp: action.payload.loginInfo.kakaoProp && _objectSpread({}, state.login.kakaoProp, {}, action.payload.loginInfo.kakaoProp)\n        }),\n        is_login: true\n      });\n\n    case FIXED_LOGIN:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: action.payload.loginInfo.jwt_token\n        }),\n        is_login: true\n      });\n\n    case SET_KAKAO_LOGIN:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: action.payload.loginInfo.jwt_token,\n          kakaoProp: action.payload.loginInfo.kakaoProp\n        }),\n        is_login: true\n      });\n\n    case SET_KAKAO_LOGOUT:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: null,\n          kakaoProp: null\n        }),\n        is_login: false\n      });\n\n    case LOGIN_TOKEN_CHECK:\n      return _objectSpread({}, state, {\n        is_validateNo: action.payload.is_validateNo || false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/reducers/kakaoinfo.js"],"names":["SET_KAKAO_INFO","SET_KAKAO_LOGIN","SET_KAKAO_LOGOUT","FIXED_LOGIN","LOGIN_TOKEN_CHECK","set_cookie","set_loading","set_message","message_open","api","initialState","is_login","login","is_validateNo","set_kakao_logout","loginkey","dispatch","getState","postKey","then","response","type","localStorage","removeItem","catch","err","console","error","set_kakao_info","data","msg","params","jwt_token","kakaoinfo","getItem","post","payload","loginInfo","kakaoProp","validate_token","token","noLogout","code","set_kakao_login","JSON","stringify","photo_url","get_kakao_info","index","state","action"],"mappings":"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","sourcesContent":["import {\n    SET_KAKAO_INFO,\n    SET_KAKAO_LOGIN,\n    SET_KAKAO_LOGOUT,\n    FIXED_LOGIN,\n    LOGIN_TOKEN_CHECK\n} from \"../actions/types\";\nimport {\n    set_cookie,\n    set_loading,\n    set_message,\n    message_open\n} from \"./utilsinfo\";\nimport api from \"../logic/asMedicoAPI\";\n\nconst initialState = {\n    is_login: false,\n    login: null,\n    is_validateNo: false\n};\n\nexport function set_kakao_logout(loginkey) {\n    return (dispatch, getState) => {\n        set_loading(true)(dispatch, getState);\n        api.postKey(null, \"/My/logout\", loginkey)\n            .then(response => {\n                set_message(\"로그아웃 되었습니다.\")(dispatch, getState);\n                dispatch({\n                    type: SET_KAKAO_LOGOUT\n                });\n                localStorage.removeItem(\"jwt_token\");\n                localStorage.removeItem(\"photo_url\");\n            })\n            .catch(err => {\n                console.error(err);\n                set_loading(false)(dispatch, getState);\n                localStorage.removeItem(\"jwt_token\");\n                localStorage.removeItem(\"photo_url\");\n                dispatch({\n                    type: SET_KAKAO_LOGOUT\n                });\n            });\n    };\n}\nexport function set_kakao_info(data, msg) {\n    return (dispatch, getState) => {\n        let params = data;\n        let jwt_token =\n            getState().kakaoinfo.login.jwt_token ||\n            localStorage.getItem(\"jwt_token\");\n        if (!jwt_token) {\n            set_kakao_logout(data)(dispatch, getState);\n        } else {\n            params.jwt_token = jwt_token;\n        }\n        api.post(params, \"/kakao/signupComplete\")\n            .then(response => {\n                message_open(\n                    msg ||\n                        response.data.msg ||\n                        response.data[\"application/json\"].msg\n                )(dispatch, getState);\n                dispatch({\n                    type: SET_KAKAO_INFO,\n                    payload: {\n                        loginInfo: {\n                            kakaoProp: response.data.msg.kakaoProp\n                        }\n                    }\n                });\n            })\n            .catch(err => {\n                // console.error(err);\n            });\n    };\n}\nexport function validate_token(token, noLogout) {\n    return async (dispatch, getState) => {\n        let params = {};\n        let jwt_token = token || localStorage.getItem(\"jwt_token\");\n        if (!jwt_token) return false;\n        params.jwt_token = jwt_token;\n        let response;\n        let is_validateNo = false;\n        try {\n            response = await api.post(params, \"/kakao/validateToken\");\n            if (response.data.code === 1) {\n                is_validateNo = true;\n                if (!noLogout) set_kakao_logout(jwt_token)(dispatch, getState);\n            }\n            dispatch({\n                type: LOGIN_TOKEN_CHECK,\n                payload: {\n                    is_validateNo: is_validateNo\n                }\n            });\n        } catch (error) {\n            console.error(error);\n        }\n\n        return is_validateNo;\n    };\n}\nexport function set_kakao_login(data) {\n    return async (dispatch, getState) => {\n        if (!localStorage.getItem(\"jwt_token\")) {\n            let response = await api.post(data, \"/kakao/login\");\n\n            set_cookie(\"jwt_token\", response.data.msg.jwt_token)(\n                dispatch,\n                getState\n            );\n            if (response.data.msg.kakaoProp)\n                set_cookie(\n                    \"kakaoProp\",\n                    JSON.stringify(response.data.msg.kakaoProp)\n                )(dispatch, getState);\n            if (response.data.msg.kakaoProp)\n                set_cookie(\"photo_url\", response.data.msg.kakaoProp.photo_url)(\n                    dispatch,\n                    getState\n                );\n\n            // const valid = await validate_token(response.data.msg.jwt_token)(\n            //     dispatch,\n            //     getState\n            // );\n\n            dispatch({\n                type: SET_KAKAO_LOGIN,\n                payload: {\n                    loginInfo: {\n                        jwt_token: response.data.msg.jwt_token,\n                        kakaoProp: response.data.msg.kakaoProp,\n                        is_login: false\n                    }\n                }\n            });\n        }\n    };\n}\nexport function get_kakao_info(response) {\n    return (dispatch, getState) => {};\n}\n\nconst index = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_KAKAO_INFO:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: action.payload.loginInfo.jwt_token,\n                    kakaoProp: action.payload.loginInfo.kakaoProp && {\n                        ...state.login.kakaoProp,\n                        ...action.payload.loginInfo.kakaoProp\n                    }\n                },\n                is_login: true\n            };\n        case FIXED_LOGIN:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: action.payload.loginInfo.jwt_token\n                },\n                is_login: true\n            };\n        case SET_KAKAO_LOGIN:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: action.payload.loginInfo.jwt_token,\n                    kakaoProp: action.payload.loginInfo.kakaoProp\n                },\n                is_login: true\n            };\n        case SET_KAKAO_LOGOUT:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: null,\n                    kakaoProp: null\n                },\n                is_login: false\n            };\n        case LOGIN_TOKEN_CHECK:\n            return {\n                ...state,\n                is_validateNo: action.payload.is_validateNo || false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}