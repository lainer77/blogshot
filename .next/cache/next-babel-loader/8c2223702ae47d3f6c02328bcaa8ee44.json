{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Layout from \"../components/layouts/Layout\";\nimport ActionMyBar from \"../components/component/ActionMyBar\";\nimport { useRouter } from \"next/router\";\nimport { TextField, FormControl, Card, Button, CircularProgress, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport useDataOne from \"../useActions/useDataOne\";\nimport usePost from \"../useActions/usePost\";\nimport { useState, useEffect } from \"react\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: \"64px 0px 0px\"\n  },\n  card: {\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"20px\",\n    margin: \"0px 20px 20px\"\n  },\n  textField: {\n    margin: \"10px 10px 20px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    margin: \"5px\"\n  },\n  process: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  select: {\n    marginLeft: \"10px\"\n  }\n}));\n\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  const {\n    data: post,\n    loading,\n    error\n  } = useDataOne(\"posts\", route.query.code);\n  const {\n    0: updatePost,\n    1: setUpdatePost\n  } = useState(post);\n  const {\n    postSave,\n    postDelete,\n    posting\n  } = usePost();\n  useEffect(() => {\n    setUpdatePost(post);\n  }, [post]);\n\n  const handleOnSave = () => {\n    postSave(post.code, {\n      title: updatePost.title,\n      context: updatePost.context\n    }, {\n      success: res => {\n        if (res.data && res.data.msg) {\n          alert(res.data.msg);\n        }\n      },\n      fail: err => {\n        if (err.response.data && err.response.data.msg) {\n          alert(err.response.data.msg);\n        }\n      }\n    });\n  };\n\n  const handleOnDelete = () => {\n    if (window.confirm(\"정말 이 포스트를 삭제하시겠습니까?\")) postDelete(post.code, {\n      success: res => {\n        if (res.data && res.data.msg) {\n          alert(res.data.msg);\n          route.back();\n        }\n      },\n      fail: err => {\n        if (err.response.data && err.response.data.msg) {\n          alert(err.response.data.msg);\n        }\n      }\n    });\n  };\n\n  const handleOnPosting = () => {\n    posting(updatePost, {\n      success: sres => {\n        if (sres.data && sres.data.msg) {\n          alert(sres.data.msg);\n          route.back();\n        }\n      },\n      fail: err => {\n        if (err.response && err.response.data) alert(err.response.data.msg);\n        console.log(err);\n      }\n    });\n  };\n\n  const handleUpdataPost = key => e => {\n    setUpdatePost(_objectSpread({}, updatePost, {\n      [key]: e.target.value\n    }));\n  };\n\n  const MyPage = __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(ActionMyBar, {\n    homeEnable: false,\n    title: post.code || \"포스트\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: loading,\n    onClick: handleOnSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: loading,\n    onClick: handleOnDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"default\",\n    disabled: loading,\n    onClick: handleOnPosting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"\\uD3EC\\uC2A4\\uD305\"))), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: classes.process,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })) : __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.textField,\n    multiline: true,\n    fullWidth: true,\n    label: \"제목\",\n    onChange: handleUpdataPost(\"title\"),\n    defaultValue: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.textField,\n    multiline: true,\n    fullWidth: true,\n    label: \"내용\",\n    onChange: handleUpdataPost(\"context\"),\n    defaultValue: post.context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), error && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, error)));\n\n  return __jsx(Layout, {\n    cookies: props.cookies,\n    content: MyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/pages/post.js"],"names":["makeStyles","Layout","ActionMyBar","useRouter","TextField","FormControl","Card","Button","CircularProgress","InputLabel","Select","MenuItem","useDataOne","usePost","useState","useEffect","useStyles","theme","root","content","padding","card","backgroundColor","margin","textField","actions","display","alignItems","justifyContent","marginTop","button","process","formControl","flexDirection","select","marginLeft","Index","props","classes","route","data","post","loading","error","query","code","updatePost","setUpdatePost","postSave","postDelete","posting","handleOnSave","title","context","success","res","msg","alert","fail","err","response","handleOnDelete","window","confirm","back","handleOnPosting","sres","console","log","handleUpdataPost","key","e","target","value","MyPage","cookies"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\n\nimport Layout from \"../components/layouts/Layout\";\n\nimport ActionMyBar from \"../components/component/ActionMyBar\";\n\nimport { useRouter } from \"next/router\";\nimport {\n  TextField,\n  FormControl,\n  Card,\n  Button,\n  CircularProgress,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\nimport useDataOne from \"../useActions/useDataOne\";\nimport usePost from \"../useActions/usePost\";\nimport { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: \"64px 0px 0px\"\n  },\n  card: {\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"20px\",\n    margin: \"0px 20px 20px\"\n  },\n  textField: {\n    margin: \"10px 10px 20px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    margin: \"5px\"\n  },\n  process: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  select: {\n    marginLeft: \"10px\"\n  }\n}));\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  const { data: post, loading, error } = useDataOne(\"posts\", route.query.code);\n  const [updatePost, setUpdatePost] = useState(post);\n  const { postSave, postDelete, posting } = usePost();\n\n  useEffect(() => {\n    setUpdatePost(post);\n  }, [post]);\n\n  const handleOnSave = () => {\n    postSave(\n      post.code,\n      {\n        title: updatePost.title,\n        context: updatePost.context\n      },\n      {\n        success: res => {\n          if (res.data && res.data.msg) {\n            alert(res.data.msg);\n          }\n        },\n        fail: err => {\n          if (err.response.data && err.response.data.msg) {\n            alert(err.response.data.msg);\n          }\n        }\n      }\n    );\n  };\n  const handleOnDelete = () => {\n    if (window.confirm(\"정말 이 포스트를 삭제하시겠습니까?\"))\n      postDelete(post.code, {\n        success: res => {\n          if (res.data && res.data.msg) {\n            alert(res.data.msg);\n            route.back();\n          }\n        },\n        fail: err => {\n          if (err.response.data && err.response.data.msg) {\n            alert(err.response.data.msg);\n          }\n        }\n      });\n  };\n  const handleOnPosting = () => {\n    posting(updatePost, {\n      success: sres => {\n        if (sres.data && sres.data.msg) {\n          alert(sres.data.msg);\n          route.back();\n        }\n      },\n      fail: err => {\n        if (err.response && err.response.data) alert(err.response.data.msg);\n        console.log(err);\n      }\n    });\n  };\n  const handleUpdataPost = key => e => {\n    setUpdatePost({ ...updatePost, [key]: e.target.value });\n  };\n\n  const MyPage = (\n    <div className={classes.root}>\n      <ActionMyBar homeEnable={false} title={post.code || \"포스트\"} />\n      <div className={classes.content}>\n        <div className={classes.actions}>\n          <span>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              onClick={handleOnSave}\n            >\n              저장\n            </Button>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={loading}\n              onClick={handleOnDelete}\n            >\n              삭제\n            </Button>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"default\"\n              disabled={loading}\n              onClick={handleOnPosting}\n            >\n              포스팅\n            </Button>\n          </span>\n        </div>\n\n        <Card className={classes.card}>\n          {loading ? (\n            <div className={classes.process}>\n              <CircularProgress />\n            </div>\n          ) : (\n            <FormControl fullWidth variant=\"outlined\">\n              <TextField\n                className={classes.textField}\n                multiline\n                fullWidth\n                label={\"제목\"}\n                onChange={handleUpdataPost(\"title\")}\n                defaultValue={post.title}\n              />\n              <TextField\n                className={classes.textField}\n                multiline\n                fullWidth\n                label={\"내용\"}\n                onChange={handleUpdataPost(\"context\")}\n                defaultValue={post.context}\n              />\n            </FormControl>\n          )}\n        </Card>\n        {error && <p>{error}</p>}\n      </div>\n    </div>\n  );\n\n  return <Layout cookies={props.cookies} content={MyPage} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}