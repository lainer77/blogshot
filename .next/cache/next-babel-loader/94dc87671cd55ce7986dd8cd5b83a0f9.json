{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/components/popup/SharePopup.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Layout from \"../layouts/PopupLayout\";\nimport styled from \"styled-components\";\nimport theme from \"../../theme\";\nimport KakaoIcon from \"../Icon/KakaoIcon\";\nimport SNSIcon from \"../Icon/SNSIcon\";\nimport UrlIcon from \"../Icon/UrlIcon\";\nimport CancelIcon from \"../Icon/CancelIconBlack\";\nimport { message_open } from \"../../reducers/utilsinfo\";\nimport { pTr } from \"../../styles/typography\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport copy from \"copy-to-clipboard\";\nimport { HOME_URL, BASE_URL } from \"../../contants/constants\";\nimport axios from \"axios\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n    // height: pTr(568)\n    width: pTr(299),\n    borderRadius: pTr(6)\n  };\n} //#region\n\n\nconst PaperStyle = styled.div`\n    && {\n        position: absolute;\n        background-color: ${theme.palette.background.paper};\n        box-shadow: ${theme.shadows[0]};\n        outline: \"none\";\n    }\n`;\nconst Content = styled.div`\n    && {\n        text-align: center;\n        padding: ${pTr(20)} ${pTr(10)};\n    }\n`;\nconst Title = styled.div`\n    && {\n        font-weight: bold;\n        font-size: ${pTr(22)};\n        letter-spacing: 0;\n        margin: ${pTr(10)} 0;\n        margin-bottom: ${pTr(20)};\n    }\n`;\nconst Body = styled(Typography)`\n    && {\n        display: flex;\n        justify-content: center;\n    }\n`;\nconst Cancel = styled(IconButton)`\n    && {\n        position: absolute;\n        padding: 10px;\n        right: 0;\n        top: 0%;\n    }\n`;\nconst ButtonContainerStyle = {\n  textAlign: \"center\",\n  padding: `0`,\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\"\n};\nconst IconButtonStyle = {\n  padding: 0\n};\nconst IconStyle = {\n  width: pTr(48),\n  height: pTr(48)\n};\nconst LabelStyle = {\n  fontSize: pTr(14),\n  fontHeight: pTr(20),\n  letterSpacing: 0\n};\n\nfunction checkMobile() {\n  var varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기\n\n  if (varUA.indexOf(\"android\") > -1) {\n    //안드로이드\n    return \"android\";\n  } else if (varUA.indexOf(\"iphone\") > -1 || varUA.indexOf(\"ipad\") > -1 || varUA.indexOf(\"ipod\") > -1) {\n    //IOS\n    return \"ios\";\n  } else {\n    //아이폰, 안드로이드 외\n    return \"other\";\n  }\n}\n\nconst KaKao = ({\n  onClose,\n  selected_doctor,\n  selected_hospital,\n  getTemporaryToken\n}) => {\n  let selected_name = selected_doctor || selected_hospital;\n  if (selected_doctor) selected_name = selected_name + \"님\";\n  const msg = `믿을 수 있는 의사 찾기 - 메디코스코프 : ${selected_name} 정보 보기`;\n  useEffect(() => {\n    if (!Kakao.isInitialized()) Kakao.init(\"d8cb17ff38c4464473b0b225340d4c2a\");\n  }, []);\n  return __jsx(\"div\", {\n    style: ButtonContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: IconButtonStyle,\n    onClick: () => {\n      onClose();\n      getTemporaryToken(({\n        token\n      }) => {\n        let href = window.location.href + `&token=${token}`;\n\n        if (Kakao) {\n          Kakao.Link.sendDefault({\n            objectType: \"feed\",\n            content: {\n              title: \"Medicoscope\",\n              // 콘텐츠의 타이틀\n              imageUrl: \"\",\n              link: {\n                webUrl: href,\n                mobileWebUrl: href\n              },\n              description: msg // 콘텐츠 상세설명\n\n            },\n            buttonTitle: \"이동하기\",\n            buttons: [{\n              title: \"이동하기\",\n              link: {\n                webUrl: href,\n                mobileWebUrl: href\n              }\n            }],\n            installTalk: true\n          });\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(KakaoIcon, {\n    style: IconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    style: LabelStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\uCE74\\uCE74\\uC624\\uD1A1\"));\n};\n\nconst Sns = ({\n  onClose,\n  selected_doctor,\n  selected_hospital,\n  getTemporaryToken\n}) => {\n  let selected_name = selected_doctor || selected_hospital;\n  if (selected_doctor) selected_name = selected_name + \"님\";\n  return __jsx(\"div\", {\n    style: ButtonContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: IconButtonStyle,\n    onClick: () => {\n      if (selected_name) {\n        getTemporaryToken(({\n          token\n        }) => {\n          let href = window.location.href + `&token=${token}`;\n          location.href = \"sms:\" + (checkMobile() == \"ios\" ? \"&\" : \"?\") + \"body=\" + `믿을 수 있는 의사 찾기 - 메디코스코프 : ${selected_name} 정보 보기 ${href}`;\n        });\n      }\n\n      onClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(SNSIcon, {\n    style: IconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    style: LabelStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"\\uBB38\\uC790\\uBA54\\uC2DC\\uC9C0\"));\n};\n\nconst Url = ({\n  onClose,\n  message_open,\n  getTemporaryToken\n}) => {\n  return __jsx(\"div\", {\n    style: ButtonContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: IconButtonStyle,\n    onClick: () => {\n      getTemporaryToken(({\n        token\n      }) => {\n        let href = window.location.href + `&token=${token}`;\n        copy(href);\n        message_open(`URL이 복사되었습니다.`);\n        onClose();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(UrlIcon, {\n    style: IconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    style: LabelStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"URL\\uBCF5\\uC0AC\"));\n};\n\nconst exUrl = \"/my/share\";\n\nconst ReviewPopup = props => {\n  const {\n    bodyProps,\n    titleProps,\n    cancelProps,\n    selected_doctor,\n    selected_hospital = \"삼성서울병원\",\n    onClose,\n    message_open\n  } = props;\n\n  const getTemporaryToken = cb => {\n    let selected_view;\n    let selected_id;\n\n    if (sessionStorage.getItem(\"selected_view\") == \"doctor\") {\n      selected_view = \"doctor\";\n      selected_id = props.selected_doctor_id;\n    } else if (sessionStorage.getItem(\"selected_view\") == \"hospital\") {\n      selected_view = \"hospital\";\n      selected_id = props.selected_hospital_id;\n    }\n\n    const encodeForm = data => {\n      return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n    };\n\n    axios.post(`https://${BASE_URL + exUrl}`, encodeForm({\n      url: `/v1/${selected_view}/${selected_id}`\n    }), {\n      headers: {\n        \"X-Api-Key\": localStorage.getItem(\"jwt_token\")\n      }\n    }).then(res => {\n      if (res.data.code == 0) {\n        if (res.data.msg) {\n          cb({\n            token: res.data.msg\n          });\n        }\n      }\n    }).catch(error => {});\n  };\n\n  return __jsx(PaperStyle, {\n    style: getModalStyle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, __jsx(Title, _extends({}, titleProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), \"\\uACF5\\uC720\\uD558\\uAE30\"), __jsx(Body, _extends({}, bodyProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), __jsx(KaKao, {\n    onClose: onClose,\n    selected_doctor: selected_doctor,\n    selected_hospital: selected_hospital,\n    getTemporaryToken: getTemporaryToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), __jsx(Sns, {\n    onClose: onClose,\n    selected_doctor: selected_doctor,\n    selected_hospital: selected_hospital,\n    getTemporaryToken: getTemporaryToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), __jsx(Url, {\n    onClose: onClose,\n    message_open: message_open,\n    selected_doctor: selected_doctor,\n    selected_hospital: selected_hospital,\n    getTemporaryToken: getTemporaryToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }))), __jsx(Cancel, _extends({\n    onClick: onClose\n  }, cancelProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), __jsx(CancelIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  })));\n};\n\nfunction Index(props) {\n  const {\n    open,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"open\", \"onClose\"]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return __jsx(Layout, _extends({\n    open: props.open,\n    handleClose: handleClose,\n    content: ReviewPopup\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    selected_doctor: state.doctorinfo.data.name_kor,\n    selected_hospital: state.hospitalinfo.data.name,\n    selected_doctor_id: state.doctorinfo.selected_doctor_id,\n    selected_hospital_id: state.hospitalinfo.selected_hospital_id\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  message_open\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/components/popup/SharePopup.js"],"names":["React","useEffect","connect","bindActionCreators","Layout","styled","theme","KakaoIcon","SNSIcon","UrlIcon","CancelIcon","message_open","pTr","Typography","IconButton","copy","HOME_URL","BASE_URL","axios","getModalStyle","top","left","transform","width","borderRadius","PaperStyle","div","palette","background","paper","shadows","Content","Title","Body","Cancel","ButtonContainerStyle","textAlign","padding","display","flexWrap","justifyContent","IconButtonStyle","IconStyle","height","LabelStyle","fontSize","fontHeight","letterSpacing","checkMobile","varUA","navigator","userAgent","toLowerCase","indexOf","KaKao","onClose","selected_doctor","selected_hospital","getTemporaryToken","selected_name","msg","Kakao","isInitialized","init","token","href","window","location","Link","sendDefault","objectType","content","title","imageUrl","link","webUrl","mobileWebUrl","description","buttonTitle","buttons","installTalk","Sns","Url","exUrl","ReviewPopup","props","bodyProps","titleProps","cancelProps","cb","selected_view","selected_id","sessionStorage","getItem","selected_doctor_id","selected_hospital_id","encodeForm","data","Object","keys","map","key","encodeURIComponent","join","post","url","headers","localStorage","then","res","code","catch","error","Index","open","other","handleClose","mapStateToProps","state","doctorinfo","name_kor","hospitalinfo","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport Layout from \"../layouts/PopupLayout\";\nimport styled from \"styled-components\";\nimport theme from \"../../theme\";\n\nimport KakaoIcon from \"../Icon/KakaoIcon\";\nimport SNSIcon from \"../Icon/SNSIcon\";\nimport UrlIcon from \"../Icon/UrlIcon\";\nimport CancelIcon from \"../Icon/CancelIconBlack\";\n\nimport { message_open } from \"../../reducers/utilsinfo\";\n\nimport { pTr } from \"../../styles/typography\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport copy from \"copy-to-clipboard\";\nimport { HOME_URL, BASE_URL } from \"../../contants/constants\";\nimport axios from \"axios\";\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n        // height: pTr(568)\n        width: pTr(299),\n        borderRadius: pTr(6)\n    };\n}\n\n//#region\nconst PaperStyle = styled.div`\n    && {\n        position: absolute;\n        background-color: ${theme.palette.background.paper};\n        box-shadow: ${theme.shadows[0]};\n        outline: \"none\";\n    }\n`;\nconst Content = styled.div`\n    && {\n        text-align: center;\n        padding: ${pTr(20)} ${pTr(10)};\n    }\n`;\nconst Title = styled.div`\n    && {\n        font-weight: bold;\n        font-size: ${pTr(22)};\n        letter-spacing: 0;\n        margin: ${pTr(10)} 0;\n        margin-bottom: ${pTr(20)};\n    }\n`;\nconst Body = styled(Typography)`\n    && {\n        display: flex;\n        justify-content: center;\n    }\n`;\nconst Cancel = styled(IconButton)`\n    && {\n        position: absolute;\n        padding: 10px;\n        right: 0;\n        top: 0%;\n    }\n`;\nconst ButtonContainerStyle = {\n    textAlign: \"center\",\n    padding: `0`,\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n};\nconst IconButtonStyle = {\n    padding: 0\n};\nconst IconStyle = {\n    width: pTr(48),\n    height: pTr(48)\n};\nconst LabelStyle = {\n    fontSize: pTr(14),\n    fontHeight: pTr(20),\n    letterSpacing: 0\n};\nfunction checkMobile() {\n    var varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기\n\n    if (varUA.indexOf(\"android\") > -1) {\n        //안드로이드\n        return \"android\";\n    } else if (\n        varUA.indexOf(\"iphone\") > -1 ||\n        varUA.indexOf(\"ipad\") > -1 ||\n        varUA.indexOf(\"ipod\") > -1\n    ) {\n        //IOS\n        return \"ios\";\n    } else {\n        //아이폰, 안드로이드 외\n        return \"other\";\n    }\n}\n\nconst KaKao = ({\n    onClose,\n    selected_doctor,\n    selected_hospital,\n    getTemporaryToken\n}) => {\n    let selected_name = selected_doctor || selected_hospital;\n    if (selected_doctor) selected_name = selected_name + \"님\";\n    const msg = `믿을 수 있는 의사 찾기 - 메디코스코프 : ${selected_name} 정보 보기`;\n    useEffect(() => {\n        if (!Kakao.isInitialized())\n            Kakao.init(\"d8cb17ff38c4464473b0b225340d4c2a\");\n    }, []);\n    return (\n        <div style={ButtonContainerStyle}>\n            <IconButton\n                style={IconButtonStyle}\n                onClick={() => {\n                    onClose();\n                    getTemporaryToken(({ token }) => {\n                        let href = window.location.href + `&token=${token}`;\n                        if (Kakao) {\n                            Kakao.Link.sendDefault({\n                                objectType: \"feed\",\n                                content: {\n                                    title: \"Medicoscope\", // 콘텐츠의 타이틀\n                                    imageUrl: \"\",\n                                    link: {\n                                        webUrl: href,\n                                        mobileWebUrl: href\n                                    },\n                                    description: msg // 콘텐츠 상세설명\n                                },\n                                buttonTitle: \"이동하기\",\n                                buttons: [\n                                    {\n                                        title: \"이동하기\",\n                                        link: {\n                                            webUrl: href,\n                                            mobileWebUrl: href\n                                        }\n                                    }\n                                ],\n                                installTalk: true\n                            });\n                        }\n                    });\n                }}\n            >\n                <KakaoIcon style={IconStyle} />\n            </IconButton>\n            <span style={LabelStyle}>카카오톡</span>\n        </div>\n    );\n};\nconst Sns = ({\n    onClose,\n    selected_doctor,\n    selected_hospital,\n    getTemporaryToken\n}) => {\n    let selected_name = selected_doctor || selected_hospital;\n    if (selected_doctor) selected_name = selected_name + \"님\";\n    return (\n        <div style={ButtonContainerStyle}>\n            <IconButton\n                style={IconButtonStyle}\n                onClick={() => {\n                    if (selected_name) {\n                        getTemporaryToken(({ token }) => {\n                            let href = window.location.href + `&token=${token}`;\n                            location.href =\n                                \"sms:\" +\n                                (checkMobile() == \"ios\" ? \"&\" : \"?\") +\n                                \"body=\" +\n                                `믿을 수 있는 의사 찾기 - 메디코스코프 : ${selected_name} 정보 보기 ${href}`;\n                        });\n                    }\n                    onClose();\n                }}\n            >\n                <SNSIcon style={IconStyle} />\n            </IconButton>\n            <span style={LabelStyle}>문자메시지</span>\n        </div>\n    );\n};\nconst Url = ({ onClose, message_open, getTemporaryToken }) => {\n    return (\n        <div style={ButtonContainerStyle}>\n            <IconButton\n                style={IconButtonStyle}\n                onClick={() => {\n                    getTemporaryToken(({ token }) => {\n                        let href = window.location.href + `&token=${token}`;\n                        copy(href);\n                        message_open(`URL이 복사되었습니다.`);\n                        onClose();\n                    });\n                }}\n            >\n                <UrlIcon style={IconStyle} />\n            </IconButton>\n            <span style={LabelStyle}>URL복사</span>\n        </div>\n    );\n};\n\nconst exUrl = \"/my/share\";\nconst ReviewPopup = props => {\n    const {\n        bodyProps,\n        titleProps,\n        cancelProps,\n        selected_doctor,\n        selected_hospital = \"삼성서울병원\",\n        onClose,\n        message_open\n    } = props;\n    const getTemporaryToken = cb => {\n        let selected_view;\n        let selected_id;\n        if (sessionStorage.getItem(\"selected_view\") == \"doctor\") {\n            selected_view = \"doctor\";\n            selected_id = props.selected_doctor_id;\n        } else if (sessionStorage.getItem(\"selected_view\") == \"hospital\") {\n            selected_view = \"hospital\";\n            selected_id = props.selected_hospital_id;\n        }\n\n        const encodeForm = data => {\n            return Object.keys(data)\n                .map(\n                    key =>\n                        encodeURIComponent(key) +\n                        \"=\" +\n                        encodeURIComponent(data[key])\n                )\n                .join(\"&\");\n        };\n        axios\n            .post(\n                `https://${BASE_URL + exUrl}`,\n                encodeForm({ url: `/v1/${selected_view}/${selected_id}` }),\n                {\n                    headers: {\n                        \"X-Api-Key\": localStorage.getItem(\"jwt_token\")\n                    }\n                }\n            )\n            .then(res => {\n                if (res.data.code == 0) {\n                    if (res.data.msg) {\n                        cb({ token: res.data.msg });\n                    }\n                }\n            })\n            .catch(error => {});\n    };\n    return (\n        <PaperStyle style={getModalStyle()}>\n            <Content>\n                <Title {...titleProps}>공유하기</Title>\n                <Body {...bodyProps}>\n                    <KaKao\n                        onClose={onClose}\n                        selected_doctor={selected_doctor}\n                        selected_hospital={selected_hospital}\n                        getTemporaryToken={getTemporaryToken}\n                    ></KaKao>\n                    <Sns\n                        onClose={onClose}\n                        selected_doctor={selected_doctor}\n                        selected_hospital={selected_hospital}\n                        getTemporaryToken={getTemporaryToken}\n                    ></Sns>\n                    <Url\n                        onClose={onClose}\n                        message_open={message_open}\n                        selected_doctor={selected_doctor}\n                        selected_hospital={selected_hospital}\n                        getTemporaryToken={getTemporaryToken}\n                    ></Url>\n                </Body>\n            </Content>\n            <Cancel onClick={onClose} {...cancelProps}>\n                <CancelIcon></CancelIcon>\n            </Cancel>\n        </PaperStyle>\n    );\n};\n\nfunction Index(props) {\n    const { open, onClose, ...other } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n    return (\n        <Layout\n            open={props.open}\n            handleClose={handleClose}\n            content={ReviewPopup}\n            {...other}\n        />\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        selected_doctor: state.doctorinfo.data.name_kor,\n        selected_hospital: state.hospitalinfo.data.name,\n        selected_doctor_id: state.doctorinfo.selected_doctor_id,\n        selected_hospital_id: state.hospitalinfo.selected_hospital_id\n    };\n};\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({ message_open }, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Index);\n"]},"metadata":{},"sourceType":"module"}