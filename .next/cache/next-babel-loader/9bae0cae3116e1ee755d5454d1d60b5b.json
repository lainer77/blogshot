{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useDataList(tableName) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    limit: 100\n  };\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1]; //   const dispatch = useDispatch();\n\n\n  useEffect(function () {\n    setLoading(true);\n    var token = localStorage.getItem(\"rjt\");\n    axios.get(\"http://\".concat(BASE_URL, \"/\").concat(tableName), {\n      params: params,\n      timeout: API_TIME_OUT / 2,\n      // 15초 이내에 응답이 오지 않으면 에러로 간주\n      headers: {\n        \"x-api-key\": token\n      }\n    }).then(function (res) {\n      setData(res.data);\n      setLoading(false); // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n    })[\"catch\"](function (error) {\n      setError(error);\n      console.log(error);\n      if (error.response && error.response.data && error.response.data.msg) alert(error.response.data.msg);\n\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"rjt\");\n      }\n\n      setLoading(false);\n    });\n  }, []);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseDataList.propTypes = {};\nexport default useDataList;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useDataList.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useDataList","tableName","params","limit","data","setData","loading","setLoading","error","setError","token","localStorage","getItem","get","timeout","headers","then","res","console","log","response","msg","alert","status","removeItem","propTypes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAyD;AAAA,MAAzBC,MAAyB,uEAAhB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAgB;;AAAA,kBAC/BT,QAAQ,CAAC,EAAD,CADuB;AAAA,MAChDU,IADgD;AAAA,MAC1CC,OAD0C;;AAAA,mBAEzBX,QAAQ,CAAC,KAAD,CAFiB;AAAA,MAEhDY,OAFgD;AAAA,MAEvCC,UAFuC;;AAAA,mBAG7Bb,QAAQ,EAHqB;AAAA,MAGhDc,KAHgD;AAAA,MAGzCC,QAHyC,kBAIvD;;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;AACAf,IAAAA,KAAK,CACFgB,GADH,kBACiBf,QADjB,cAC6BG,SAD7B,GAC0C;AACtCC,MAAAA,MAAM,EAAEA,MAD8B;AAEtCY,MAAAA,OAAO,EAAEf,YAAY,GAAG,CAFc;AAEX;AAC3BgB,MAAAA,OAAO,EAAE;AACP,qBAAaL;AADN;AAH6B,KAD1C,EAQGM,IARH,CAQQ,UAAAC,GAAG,EAAI;AACXZ,MAAAA,OAAO,CAACY,GAAG,CAACb,IAAL,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFW,CAGX;AACD,KAZH,WAaS,UAAAC,KAAK,EAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,UAAIA,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,CAAehB,IAAjC,IAAyCI,KAAK,CAACY,QAAN,CAAehB,IAAf,CAAoBiB,GAAjE,EACEC,KAAK,CAACd,KAAK,CAACY,QAAN,CAAehB,IAAf,CAAoBiB,GAArB,CAAL;;AACF,UAAIb,KAAK,CAACY,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;AACjCZ,QAAAA,YAAY,CAACa,UAAb,CAAwB,KAAxB;AACD;;AACDjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAtBH;AAuBD,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,SAAO;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA,OAAR;AAAiBE,IAAAA,KAAK,EAALA;AAAjB,GAAP;AACD;;AAEDR,WAAW,CAACyB,SAAZ,GAAwB,EAAxB;AAEA,eAAezB,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useDataList(tableName, params = { limit: 100 }) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios\n      .get(`http://${BASE_URL}/${tableName}`, {\n        params: params,\n        timeout: API_TIME_OUT / 2, // 15초 이내에 응답이 오지 않으면 에러로 간주\n        headers: {\n          \"x-api-key\": token\n        }\n      })\n      .then(res => {\n        setData(res.data);\n        setLoading(false);\n        // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n        if (error.response && error.response.data && error.response.data.msg)\n          alert(error.response.data.msg);\n        if (error.response.status === 401) {\n          localStorage.removeItem(\"rjt\");\n        }\n        setLoading(false);\n      });\n  }, []);\n\n  return { data, loading, error };\n}\n\nuseDataList.propTypes = {};\n\nexport default useDataList;\n"]},"metadata":{},"sourceType":"module"}