{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/components/tab/Tabs.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Tab, Tabs, TabPanel } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { pTr, BASE_COLOR } from \"../../styles/typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  padding: {\n    padding: pTr(20)\n  },\n  box: {\n    backgroundColor: \"rgb(246 246 246)\"\n  },\n  errorRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction Tabss({\n  boxColor = \"\",\n  errMsg = \"\",\n  titles = [\"\"],\n  contents = [{}],\n  selected_tab = \"\"\n}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = useCallback((event, newValue) => {\n    setValue(newValue);\n  }, []);\n  let contentCountMissMatch = false;\n\n  if (contentCountMissMatch) {\n    return __jsx(\"div\", {\n      className: classes.errorRoot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, titles.map((title, index) => __jsx(Tab, _extends({\n    key: title + index,\n    label: title\n  }, a11yProps(index), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))))), contents.map((content, index) => __jsx(TabPanel, {\n    key: titles[index] + \"-\" + index,\n    value: value,\n    index: 0,\n    boxColor: boxColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, content)))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selected_tab: state.searchinfo.selected_tab == undefined ? \"doctor\" : state.searchinfo.selected_tab\n  };\n}\n\nexport default connect(mapStateToProps)(Tabss);","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/components/tab/Tabs.js"],"names":["React","useEffect","useCallback","PropTypes","makeStyles","withStyles","Divider","Tab","Tabs","TabPanel","connect","styled","pTr","BASE_COLOR","useStyles","theme","root","flexGrow","padding","box","backgroundColor","errorRoot","display","alignItems","justifyContent","a11yProps","index","id","Tabss","boxColor","errMsg","titles","contents","selected_tab","classes","value","setValue","useState","handleChange","event","newValue","contentCountMissMatch","map","title","content","mapStateToProps","state","searchinfo","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Tab, Tabs, TabPanel } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport { pTr, BASE_COLOR } from \"../../styles/typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  padding: {\n    padding: pTr(20)\n  },\n  box: {\n    backgroundColor: \"rgb(246 246 246)\"\n  },\n  errorRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\nfunction Tabss({\n  boxColor = \"\",\n  errMsg = \"\",\n  titles = [\"\"],\n  contents = [{}],\n  selected_tab = \"\"\n}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = useCallback((event, newValue) => {\n    setValue(newValue);\n  }, []);\n\n  let contentCountMissMatch = false;\n\n  if (contentCountMissMatch) {\n    return <div className={classes.errorRoot}></div>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.box}>\n        <Divider />\n        <div>\n          {/* <AntTabs\n            value={value}\n            onChange={handleChange}\n            // textColor={BASE_COLOR}\n            aria-label=\"ant\"\n            variant=\"fullWidth\"\n          >\n            {titles.map((title, index) => (\n              <AntTab key={title + index} label={title} />\n            ))}\n          </AntTabs> */}\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"simple tabs example\"\n            >\n              {titles.map((title, index) => (\n                <Tab key={title + index} label={title} {...a11yProps(index)} />\n              ))}\n            </Tabs>\n          </AppBar>\n          {contents.map((content, index) => (\n            <TabPanel\n              key={titles[index] + \"-\" + index}\n              value={value}\n              index={0}\n              boxColor={boxColor}\n            >\n              {content}\n            </TabPanel>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction mapStateToProps(state) {\n  return {\n    selected_tab:\n      state.searchinfo.selected_tab == undefined\n        ? \"doctor\"\n        : state.searchinfo.selected_tab\n  };\n}\n\nexport default connect(mapStateToProps)(Tabss);\n"]},"metadata":{},"sourceType":"module"}