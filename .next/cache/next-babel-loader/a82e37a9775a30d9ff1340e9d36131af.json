{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/contants/utils.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport window from \"global\";\nexport function TextLoder(text) {\n  return text.split(\"\\n\").map((line, i) => {\n    return __jsx(\"span\", {\n      key: i + \"area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, line, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  });\n}\nexport function deviceAgent(navigator) {\n  var varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기\n\n  if (varUA.match(\"android\") != null) {\n    return \"android\";\n  } else if (varUA.indexOf(\"iphone\") > -1) {\n    return \"iphone\";\n  } else if (varUA.indexOf(\"ipad\") > -1) {\n    return \"ipad\";\n  } else if (varUA.indexOf(\"ipod\") > -1) {\n    //IOS 일때 처리\n    return \"ipod\";\n  } else {\n    //아이폰, 안드로이드 외 처리\n    return null;\n  }\n}\nexport function scratch(text) {\n  let subTxt = text.substr(1);\n  return text.replace(subTxt, \"**\");\n}\nexport function scratch2(text = \"\") {\n  let subTxt = text.substr(1, text.length);\n  let ret = \"\";\n\n  if (typeof subTxt === \"string\") {\n    if (text[0] == \" \" || text[0] == \"(\" || text[0] == \")\") ret += text[1];else ret += text[0];\n\n    for (let index = 0; index < subTxt.length; index++) {\n      if (subTxt[index] != \" \" && subTxt[index] != \"병\" && subTxt[index] != \"원\" && subTxt[index] != \"의\" && subTxt[index] != \"한\") ret += \"*\";else {\n        ret += subTxt[index];\n      }\n    }\n  }\n\n  return ret; //  return text.replace(subTxt, \"*\");\n}\nexport function all_scratch(data) {\n  if (typeof data === \"string\") return scratch(data);else if (typeof data === \"object\") {\n    let scratchData = {};\n    Object.keys(data).map(x => {\n      if (typeof data[x] === \"string\") {\n        scratch(data[x]);\n      }\n    });\n    return scratchData;\n  } else if (Array.isArray(data)) {\n    let scratchData = [];\n    scratchData = data.map(x => {\n      if (typeof x === \"string\") return scratch(x);\n    });\n    return scratchData;\n  }\n} // Safari 3.0+ \"[object HTMLElementConstructor]\"\n\nexport const isSafari = /constructor/i.test(window.HTMLElement) || function (p) {\n  return p.toString() === \"[object SafariRemoteNotification]\";\n}(!window[\"safari\"] || typeof safari !== \"undefined\" && safari.pushNotification);\nexport const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/contants/utils.js"],"names":["window","TextLoder","text","split","map","line","i","deviceAgent","navigator","varUA","userAgent","toLowerCase","match","indexOf","scratch","subTxt","substr","replace","scratch2","length","ret","index","all_scratch","data","scratchData","Object","keys","x","Array","isArray","isSafari","test","HTMLElement","p","toString","safari","pushNotification","isChrome","chrome","webstore","runtime"],"mappings":"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","sourcesContent":["import window from \"global\";\n\nexport function TextLoder(text) {\n    return text.split(\"\\n\").map((line, i) => {\n        return (\n            <span key={i + \"area\"}>\n                {line}\n                <br />\n            </span>\n        );\n    });\n}\nexport function deviceAgent(navigator) {\n    var varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기\n\n    if (varUA.match(\"android\") != null) {\n        return \"android\";\n    } else if (varUA.indexOf(\"iphone\") > -1) {\n        return \"iphone\";\n    } else if (varUA.indexOf(\"ipad\") > -1) {\n        return \"ipad\";\n    } else if (varUA.indexOf(\"ipod\") > -1) {\n        //IOS 일때 처리\n        return \"ipod\";\n    } else {\n        //아이폰, 안드로이드 외 처리\n        return null;\n    }\n}\nexport function scratch(text) {\n    let subTxt = text.substr(1);\n    return text.replace(subTxt, \"**\");\n}\nexport function scratch2(text = \"\") {\n    let subTxt = text.substr(1, text.length);\n    let ret = \"\";\n    if (typeof subTxt === \"string\") {\n        if (text[0] == \" \" || text[0] == \"(\" || text[0] == \")\") ret += text[1];\n        else ret += text[0];\n        for (let index = 0; index < subTxt.length; index++) {\n            if (\n                subTxt[index] != \" \" &&\n                subTxt[index] != \"병\" &&\n                subTxt[index] != \"원\" &&\n                subTxt[index] != \"의\" &&\n                subTxt[index] != \"한\"\n            )\n                ret += \"*\";\n            else {\n                ret += subTxt[index];\n            }\n        }\n    }\n    return ret;\n    //  return text.replace(subTxt, \"*\");\n}\nexport function all_scratch(data) {\n    if (typeof data === \"string\") return scratch(data);\n    else if (typeof data === \"object\") {\n        let scratchData = {};\n\n        Object.keys(data).map(x => {\n            if (typeof data[x] === \"string\") {\n                scratch(data[x]);\n            }\n        });\n        return scratchData;\n    } else if (Array.isArray(data)) {\n        let scratchData = [];\n        scratchData = data.map(x => {\n            if (typeof x === \"string\") return scratch(x);\n        });\n        return scratchData;\n    }\n}\n\n// Safari 3.0+ \"[object HTMLElementConstructor]\"\nexport const isSafari =\n    /constructor/i.test(window.HTMLElement) ||\n    (function(p) {\n        return p.toString() === \"[object SafariRemoteNotification]\";\n    })(\n        !window[\"safari\"] ||\n            (typeof safari !== \"undefined\" && safari.pushNotification)\n    );\n\nexport const isChrome =\n    !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n"]},"metadata":{},"sourceType":"module"}