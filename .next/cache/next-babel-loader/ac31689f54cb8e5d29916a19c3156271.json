{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\nimport { useRouter } from \"next/router\";\n\nfunction useTistoryLogin() {\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const route = useRouter(); //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    const code = route.query.code;\n    console.log(\"code :\", code);\n\n    if (code) {\n      axios.get(`http://${BASE_URL}/auth/access_token`, {\n        params: {\n          code: code\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(res => {\n        console.log(res.data);\n        localStorage.setItem(\"access_token\", res.data.access_token);\n        setData(res.data);\n        setLoading(false);\n        return res; // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n    }\n  }, [route.query.code]);\n\n  const absolve = () => {\n    setLoading(true);\n    return axios.get(`http://${BASE_URL}/auth`, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n      return error;\n    });\n  };\n\n  return {\n    absolve,\n    loading,\n    error,\n    access_token: data.access_token\n  };\n}\n\nuseTistoryLogin.propTypes = {};\nexport default useTistoryLogin;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTistoryLogin.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useRouter","useTistoryLogin","data","setData","loading","setLoading","error","setError","route","code","query","console","log","get","params","timeout","then","res","localStorage","setItem","access_token","catch","absolve","propTypes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,EAAlC;AACA,QAAMc,KAAK,GAAGR,SAAS,EAAvB,CAJyB,CAKzB;;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYD,IAAzB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;;AACA,QAAIA,IAAJ,EAAU;AACRZ,MAAAA,KAAK,CACFgB,GADH,CACQ,UAASf,QAAS,oBAD1B,EAC+C;AAC3CgB,QAAAA,MAAM,EAAE;AAAEL,UAAAA,IAAI,EAAEA;AAAR,SADmC;AAE3CM,QAAAA,OAAO,EAAEhB,YAAY,GAAG,CAFmB,CAEjB;;AAFiB,OAD/C,EAKGiB,IALH,CAKQC,GAAG,IAAI;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACf,IAAhB;AACAgB,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACf,IAAJ,CAASkB,YAA9C;AACAjB,QAAAA,OAAO,CAACc,GAAG,CAACf,IAAL,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOY,GAAP,CALW,CAMX;AACD,OAZH,EAaGI,KAbH,CAaSf,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOC,KAAP;AACD,OAjBH;AAkBD;AACF,GAvBQ,EAuBN,CAACE,KAAK,CAACE,KAAN,CAAYD,IAAb,CAvBM,CAAT;;AAyBA,QAAMa,OAAO,GAAG,MAAM;AACpBjB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOR,KAAK,CACTgB,GADI,CACC,UAASf,QAAS,OADnB,EAC2B;AAC9BiB,MAAAA,OAAO,EAAEhB,YAAY,GAAG,CADM,CACJ;;AADI,KAD3B,EAIJsB,KAJI,CAIEf,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOC,KAAP;AACD,KARI,CAAP;AASD,GAXD;;AAaA,SAAO;AAAEgB,IAAAA,OAAF;AAAWlB,IAAAA,OAAX;AAAoBE,IAAAA,KAApB;AAA2Bc,IAAAA,YAAY,EAAElB,IAAI,CAACkB;AAA9C,GAAP;AACD;;AAEDnB,eAAe,CAACsB,SAAhB,GAA4B,EAA5B;AAEA,eAAetB,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\nimport { useRouter } from \"next/router\";\n\nfunction useTistoryLogin() {\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const route = useRouter();\n  //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    const code = route.query.code;\n    console.log(\"code :\", code);\n    if (code) {\n      axios\n        .get(`http://${BASE_URL}/auth/access_token`, {\n          params: { code: code },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          localStorage.setItem(\"access_token\", res.data.access_token);\n          setData(res.data);\n          setLoading(false);\n          return res;\n          // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n        })\n        .catch(error => {\n          setError(error);\n          setLoading(false);\n          return error;\n        });\n    }\n  }, [route.query.code]);\n\n  const absolve = () => {\n    setLoading(true);\n    return axios\n      .get(`http://${BASE_URL}/auth`, {\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n      })\n      .catch(error => {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n  };\n\n  return { absolve, loading, error, access_token: data.access_token };\n}\n\nuseTistoryLogin.propTypes = {};\n\nexport default useTistoryLogin;\n"]},"metadata":{},"sourceType":"module"}