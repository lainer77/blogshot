{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction usePosting() {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(); //   const dispatch = useDispatch();\n\n  const postSave = (code = \"\", params = {}, options = {\n    success: response => {},\n    fail: error => {},\n    finally: () => {}\n  }) => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios.patch(`http://${BASE_URL}/posts/${code}`, {\n      json: JSON.stringify(params)\n    }, {\n      timeout: API_TIME_OUT / 2,\n      // 15초 이내에 응답이 오지 않으면 에러로 간주\n      headers: {\n        \"x-api-key\": token\n      }\n    }).then(res => {\n      options.success && options.success(res);\n    }).catch(error => {\n      options.fail && options.fail(error);\n      setError(error);\n    }).finally(() => {\n      options.finally && options.finally();\n      setLoading(false);\n    });\n  };\n\n  const postDelete = (code = \"\", options = {\n    success: response => {},\n    fail: error => {},\n    finally: () => {}\n  }) => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios.delete(`http://${BASE_URL}/posts/${code}`, {\n      timeout: API_TIME_OUT / 2,\n      // 15초 이내에 응답이 오지 않으면 에러로 간주\n      headers: {\n        \"x-api-key\": token\n      }\n    }).then(res => {\n      options.success && options.success(res);\n    }).catch(error => {\n      options.fail && options.fail(error);\n      setError(error);\n    }).finally(() => {\n      options.finally && options.finally();\n      setLoading(false);\n    });\n  };\n\n  const posting = (params = {}, options = {\n    success: () => {},\n    fail: () => {},\n    finally: () => {}\n  }) => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios.post(`http://${BASE_URL}/posting`, {\n      json: JSON.stringify(params)\n    }, {\n      timeout: API_TIME_OUT / 2,\n      // 15초 이내에 응답이 오지 않으면 에러로 간주\n      headers: {\n        \"x-api-key\": token\n      }\n    }).then(res => {\n      setData(res.data);\n      options.success && options.success(res); // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n      options.fail && options.fail(error);\n    }).finally(() => {\n      setLoading(false);\n      options.finally && options.finally();\n    });\n  };\n\n  return {\n    postSave,\n    posting,\n    loading,\n    error\n  };\n}\n\nusePosting.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.any.isRequired\n};\nexport default usePosting;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/usePosting.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","usePosting","loading","setLoading","error","setError","postSave","code","params","options","success","response","fail","finally","token","localStorage","getItem","patch","json","JSON","stringify","timeout","headers","then","res","catch","postDelete","delete","posting","post","setData","data","console","log","propTypes","tableName","string","isRequired","id","any"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction usePosting() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  //   const dispatch = useDispatch();\n\n  const postSave = (\n    code = \"\",\n    params = {},\n    options = { success: response => {}, fail: error => {}, finally: () => {} }\n  ) => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios\n      .patch(\n        `http://${BASE_URL}/posts/${code}`,\n        { json: JSON.stringify(params) },\n        {\n          timeout: API_TIME_OUT / 2, // 15초 이내에 응답이 오지 않으면 에러로 간주\n          headers: {\n            \"x-api-key\": token\n          }\n        }\n      )\n      .then(res => {\n        options.success && options.success(res);\n      })\n      .catch(error => {\n        options.fail && options.fail(error);\n        setError(error);\n      })\n      .finally(() => {\n        options.finally && options.finally();\n        setLoading(false);\n      });\n  };\n\n  const postDelete = (\n    code = \"\",\n    options = { success: response => {}, fail: error => {}, finally: () => {} }\n  ) => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios\n      .delete(`http://${BASE_URL}/posts/${code}`, {\n        timeout: API_TIME_OUT / 2, // 15초 이내에 응답이 오지 않으면 에러로 간주\n        headers: {\n          \"x-api-key\": token\n        }\n      })\n      .then(res => {\n        options.success && options.success(res);\n      })\n      .catch(error => {\n        options.fail && options.fail(error);\n        setError(error);\n      })\n      .finally(() => {\n        options.finally && options.finally();\n        setLoading(false);\n      });\n  };\n  const posting = (\n    params = {},\n    options = { success: () => {}, fail: () => {}, finally: () => {} }\n  ) => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios\n      .post(\n        `http://${BASE_URL}/posting`,\n        { json: JSON.stringify(params) },\n        {\n          timeout: API_TIME_OUT / 2, // 15초 이내에 응답이 오지 않으면 에러로 간주\n          headers: {\n            \"x-api-key\": token\n          }\n        }\n      )\n      .then(res => {\n        setData(res.data);\n        options.success && options.success(res);\n        // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n        options.fail && options.fail(error);\n      })\n      .finally(() => {\n        setLoading(false);\n        options.finally && options.finally();\n      });\n  };\n\n  return { postSave, posting, loading, error };\n}\n\nusePosting.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.any.isRequired\n};\n\nexport default usePosting;\n"]},"metadata":{},"sourceType":"module"}