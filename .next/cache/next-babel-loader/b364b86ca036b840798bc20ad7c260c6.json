{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useDataOne(tableName, id) {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(); //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios.get(`http://${BASE_URL}/${tableName}/${id}`, {\n      timeout: API_TIME_OUT / 2,\n      // 15초 이내에 응답이 오지 않으면 에러로 간주\n      headers: {\n        \"x-api-key\": token\n      }\n    }).then(res => {\n      setData(res.data);\n      setLoading(false); // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n    }).catch(error => {\n      console.log(error);\n      setError(error.msg);\n      if (error.response && error.response.data && error.response.data.msg) alert(error.response.data.msg);\n\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"rjt\");\n        route.push(\"/login\", \"/\");\n      }\n\n      setLoading(false);\n    });\n  }, []);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\nuseDataOne.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.any.isRequired\n};\nexport default useDataOne;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useDataOne.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useDataOne","tableName","id","data","setData","loading","setLoading","error","setError","token","localStorage","getItem","get","timeout","headers","then","res","catch","console","log","msg","response","alert","status","removeItem","route","push","propTypes","string","isRequired","any"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,EAA/B,EAAmC;AACjC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,EAAlC,CAHiC,CAIjC;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;AACAd,IAAAA,KAAK,CACFe,GADH,CACQ,UAASd,QAAS,IAAGG,SAAU,IAAGC,EAAG,EAD7C,EACgD;AAC5CW,MAAAA,OAAO,EAAEd,YAAY,GAAG,CADoB;AACjB;AAC3Be,MAAAA,OAAO,EAAE;AAAE,qBAAaL;AAAf;AAFmC,KADhD,EAKGM,IALH,CAKQC,GAAG,IAAI;AACXZ,MAAAA,OAAO,CAACY,GAAG,CAACb,IAAL,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFW,CAGX;AACD,KATH,EAUGW,KAVH,CAUSV,KAAK,IAAI;AACdW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAC,MAAAA,QAAQ,CAACD,KAAK,CAACa,GAAP,CAAR;AACA,UAAIb,KAAK,CAACc,QAAN,IAAkBd,KAAK,CAACc,QAAN,CAAelB,IAAjC,IAAyCI,KAAK,CAACc,QAAN,CAAelB,IAAf,CAAoBiB,GAAjE,EACEE,KAAK,CAACf,KAAK,CAACc,QAAN,CAAelB,IAAf,CAAoBiB,GAArB,CAAL;;AACF,UAAIb,KAAK,CAACc,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjCb,QAAAA,YAAY,CAACc,UAAb,CAAwB,KAAxB;AACAC,QAAAA,KAAK,CAACC,IAAN,CAAW,QAAX,EAAqB,GAArB;AACD;;AACDpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KApBH;AAqBD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,SAAO;AAAEH,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD;;AAEDP,UAAU,CAAC2B,SAAX,GAAuB;AACrB1B,EAAAA,SAAS,EAAEL,SAAS,CAACgC,MAAV,CAAiBC,UADP;AAErB3B,EAAAA,EAAE,EAAEN,SAAS,CAACkC,GAAV,CAAcD;AAFG,CAAvB;AAKA,eAAe7B,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useDataOne(tableName, id) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem(\"rjt\");\n    axios\n      .get(`http://${BASE_URL}/${tableName}/${id}`, {\n        timeout: API_TIME_OUT / 2, // 15초 이내에 응답이 오지 않으면 에러로 간주\n        headers: { \"x-api-key\": token }\n      })\n      .then(res => {\n        setData(res.data);\n        setLoading(false);\n        // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error.msg);\n        if (error.response && error.response.data && error.response.data.msg)\n          alert(error.response.data.msg);\n        if (error.response.status === 401) {\n          localStorage.removeItem(\"rjt\");\n          route.push(\"/login\", \"/\");\n        }\n        setLoading(false);\n      });\n  }, []);\n\n  return { data, loading, error };\n}\n\nuseDataOne.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.any.isRequired\n};\n\nexport default useDataOne;\n"]},"metadata":{},"sourceType":"module"}