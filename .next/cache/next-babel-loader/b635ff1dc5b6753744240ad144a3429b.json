{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Layout from \"../components/layouts/Layout\";\nimport ActionMyBar from \"../components/component/ActionMyBar\";\nimport { useRouter } from \"next/router\";\nimport { TextField, FormControl, Card, Button, CircularProgress, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport useDataOne from \"../useActions/useDataOne\";\nimport usePosting from \"../useActions/usePosting\";\nimport { useState, useEffect } from \"react\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    content: {\n      padding: \"64px 0px 0px\"\n    },\n    card: {\n      backgroundColor: \"rgb(240 240 240)\",\n      padding: \"20px\",\n      margin: \"0px 20px 20px\"\n    },\n    textField: {\n      margin: \"10px 10px 20px\"\n    },\n    actions: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"0px 20px 5px\",\n      marginTop: \"15px\"\n    },\n    button: {\n      margin: \"5px\"\n    },\n    process: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    formControl: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    select: {\n      marginLeft: \"10px\"\n    }\n  };\n});\n\nvar Index = function Index(props) {\n  var classes = useStyles();\n  var route = useRouter();\n\n  var _useDataOne = useDataOne(\"posts\", route.query.code),\n      post = _useDataOne.data,\n      loading = _useDataOne.loading,\n      error = _useDataOne.error;\n\n  var _useState = useState(post),\n      updatePost = _useState[0],\n      setUpdatePost = _useState[1];\n\n  var _usePosting = usePosting(),\n      postSave = _usePosting.postSave,\n      posting = _usePosting.posting;\n\n  var _useState2 = useState([]),\n      categoryData = _useState2[0],\n      setCategoryData = _useState2[1];\n\n  var _useState3 = useState(),\n      selected = _useState3[0],\n      setSelected = _useState3[1];\n\n  useEffect(function () {\n    var category = localStorage.getItem(\"category\");\n\n    if (category) {\n      category = (_readOnlyError(\"category\"), JSON.parse(category));\n      setCategoryData(category);\n    }\n  }, []);\n\n  var handleOnSave = function handleOnSave() {\n    postSave(post.code, {\n      title: updatePost.title,\n      context: updatePost.context\n    }, {\n      success: function success(res) {\n        if (res.data && res.data.msg) {\n          alert(res.data.msg);\n        }\n      },\n      fail: function fail(err) {\n        if (err.response.data && err.response.data.msg) {\n          alert(err.response.data.msg);\n        }\n      }\n    });\n  };\n\n  var handleOnPosting = function handleOnPosting() {\n    posting(updatePost, {\n      success: function success(sres) {\n        if (sres.data && sres.data.msg) alert(sres.data.msg);\n      }\n    });\n  };\n\n  var handleUpdataPost = function handleUpdataPost(key) {\n    return function () {\n      return setUpdatePost(_objectSpread({}, updatePost, _defineProperty({}, key, e.target.value)));\n    };\n  };\n\n  var handleChange = function handleChange(e) {\n    setSelected(e.target.value);\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      console.log(e.target.value);\n      setCategoryData(categoryData.push(e.target.value));\n    }\n  };\n\n  var MyPage = __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(ActionMyBar, {\n    homeEnable: false,\n    title: post.code || \"포스트\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    variant: \"filled\",\n    classes: {\n      root: classes.formControl\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\uCE74\\uD14C\\uACE0\\uB9AC\",\n    onKeyDown: handleKeyDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), __jsx(Select, {\n    className: classes.select,\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: selected,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, categoryData.map(function (item, index) {\n    return __jsx(MenuItem, {\n      key: item + \"-\" + index,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, item);\n  }))), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOnSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"default\",\n    onClick: handleOnPosting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"\\uD3EC\\uC2A4\\uD305\"))), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: classes.process,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })) : __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.textField,\n    multiline: true,\n    fullWidth: true,\n    label: \"제목\",\n    onChange: handleUpdataPost(\"title\"),\n    defaultValue: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.textField,\n    multiline: true,\n    fullWidth: true,\n    label: \"내용\",\n    onChange: handleUpdataPost(\"context\"),\n    defaultValue: post.context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))), error && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, error)));\n\n  return __jsx(Layout, {\n    cookies: props.cookies,\n    content: MyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/pages/post.js"],"names":["makeStyles","Layout","ActionMyBar","useRouter","TextField","FormControl","Card","Button","CircularProgress","InputLabel","Select","MenuItem","useDataOne","usePosting","useState","useEffect","useStyles","theme","root","content","padding","card","backgroundColor","margin","textField","actions","display","alignItems","justifyContent","marginTop","button","process","formControl","flexDirection","select","marginLeft","Index","props","classes","route","query","code","post","data","loading","error","updatePost","setUpdatePost","postSave","posting","categoryData","setCategoryData","selected","setSelected","category","localStorage","getItem","JSON","parse","handleOnSave","title","context","success","res","msg","alert","fail","err","response","handleOnPosting","sres","handleUpdataPost","key","e","target","value","handleChange","handleKeyDown","console","log","push","MyPage","map","item","index","cookies"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\n\nimport Layout from \"../components/layouts/Layout\";\n\nimport ActionMyBar from \"../components/component/ActionMyBar\";\n\nimport { useRouter } from \"next/router\";\nimport {\n  TextField,\n  FormControl,\n  Card,\n  Button,\n  CircularProgress,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\nimport useDataOne from \"../useActions/useDataOne\";\nimport usePosting from \"../useActions/usePosting\";\nimport { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: \"64px 0px 0px\"\n  },\n  card: {\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"20px\",\n    margin: \"0px 20px 20px\"\n  },\n  textField: {\n    margin: \"10px 10px 20px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    margin: \"5px\"\n  },\n  process: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  select: {\n    marginLeft: \"10px\"\n  }\n}));\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  const { data: post, loading, error } = useDataOne(\"posts\", route.query.code);\n  const [updatePost, setUpdatePost] = useState(post);\n  const { postSave, posting } = usePosting();\n\n  const [categoryData, setCategoryData] = useState([]);\n  const [selected, setSelected] = useState();\n\n  useEffect(() => {\n    const category = localStorage.getItem(\"category\");\n    if (category) {\n      category = JSON.parse(category);\n      setCategoryData(category);\n    }\n  }, []);\n\n  const handleOnSave = () => {\n    postSave(\n      post.code,\n      {\n        title: updatePost.title,\n        context: updatePost.context\n      },\n      {\n        success: res => {\n          if (res.data && res.data.msg) {\n            alert(res.data.msg);\n          }\n        },\n        fail: err => {\n          if (err.response.data && err.response.data.msg) {\n            alert(err.response.data.msg);\n          }\n        }\n      }\n    );\n  };\n  const handleOnPosting = () => {\n    posting(updatePost, {\n      success: sres => {\n        if (sres.data && sres.data.msg) alert(sres.data.msg);\n      }\n    });\n  };\n  const handleUpdataPost = key => () =>\n    setUpdatePost({ ...updatePost, [key]: e.target.value });\n  const handleChange = e => {\n    setSelected(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      console.log(e.target.value);\n      setCategoryData(categoryData.push(e.target.value));\n    }\n  };\n\n  const MyPage = (\n    <div className={classes.root}>\n      <ActionMyBar homeEnable={false} title={post.code || \"포스트\"} />\n      <div className={classes.content}>\n        <div className={classes.actions}>\n          <FormControl variant=\"filled\" classes={{ root: classes.formControl }}>\n            <TextField label=\"카테고리\" onKeyDown={handleKeyDown} />\n            <Select\n              className={classes.select}\n              labelId=\"demo-simple-select-filled-label\"\n              id=\"demo-simple-select-filled\"\n              value={selected}\n              onChange={handleChange}\n            >\n              {categoryData.map((item, index) => {\n                return (\n                  <MenuItem key={item + \"-\" + index} value={item}>\n                    {item}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          <span>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled\n            >\n              삭제\n            </Button>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleOnSave}\n            >\n              저장\n            </Button>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"default\"\n              onClick={handleOnPosting}\n            >\n              포스팅\n            </Button>\n          </span>\n        </div>\n\n        <Card className={classes.card}>\n          {loading ? (\n            <div className={classes.process}>\n              <CircularProgress />\n            </div>\n          ) : (\n            <FormControl fullWidth variant=\"outlined\">\n              <TextField\n                className={classes.textField}\n                multiline\n                fullWidth\n                label={\"제목\"}\n                onChange={handleUpdataPost(\"title\")}\n                defaultValue={post.title}\n              />\n              <TextField\n                className={classes.textField}\n                multiline\n                fullWidth\n                label={\"내용\"}\n                onChange={handleUpdataPost(\"context\")}\n                defaultValue={post.context}\n              />\n            </FormControl>\n          )}\n        </Card>\n        {error && <p>{error}</p>}\n      </div>\n    </div>\n  );\n\n  return <Layout cookies={props.cookies} content={MyPage} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}