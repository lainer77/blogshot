{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { SET_KAKAO_INFO, SET_KAKAO_LOGIN, SET_KAKAO_LOGOUT, FIXED_LOGIN, LOGIN_TOKEN_CHECK } from \"../actions/types\";\nimport { set_cookie, set_loading, set_message, message_open } from \"./utilsinfo\";\nimport api from \"../logic/asMedicoAPI\";\nvar initialState = {\n  is_login: false,\n  login: null,\n  is_validateNo: false\n};\nexport function set_kakao_logout(loginkey) {\n  return function (dispatch, getState) {\n    set_loading(true)(dispatch, getState);\n    api.postKey(null, \"/My/logout\", loginkey).then(function (response) {\n      set_message(\"로그아웃 되었습니다.\")(dispatch, getState);\n      dispatch({\n        type: SET_KAKAO_LOGOUT\n      });\n      localStorage.removeItem(\"jwt_token\");\n      localStorage.removeItem(\"photo_url\");\n    })[\"catch\"](function (err) {\n      console.error(err);\n      set_loading(false)(dispatch, getState);\n      localStorage.removeItem(\"jwt_token\");\n      localStorage.removeItem(\"photo_url\");\n      dispatch({\n        type: SET_KAKAO_LOGOUT\n      });\n    });\n  };\n}\nexport function set_kakao_info(data, msg) {\n  return function (dispatch, getState) {\n    var params = data;\n    var jwt_token = getState().kakaoinfo.login.jwt_token || localStorage.getItem(\"jwt_token\");\n\n    if (!jwt_token) {\n      set_kakao_logout(data)(dispatch, getState);\n    } else {\n      params.jwt_token = jwt_token;\n    }\n\n    api.post(params, \"/kakao/signupComplete\").then(function (response) {\n      message_open(msg || response.data.msg || response.data[\"application/json\"].msg)(dispatch, getState);\n      dispatch({\n        type: SET_KAKAO_INFO,\n        payload: {\n          loginInfo: {\n            kakaoProp: response.data.msg.kakaoProp\n          }\n        }\n      });\n    })[\"catch\"](function (err) {// console.error(err);\n    });\n  };\n}\nexport function validate_token(token, noLogout) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var params, jwt_token, response, is_validateNo;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = {};\n                jwt_token = token || localStorage.getItem(\"jwt_token\");\n\n                if (jwt_token) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 4:\n                params.jwt_token = jwt_token;\n                is_validateNo = false;\n                _context.prev = 6;\n                _context.next = 9;\n                return api.post(params, \"/kakao/validateToken\");\n\n              case 9:\n                response = _context.sent;\n\n                if (response.data.code === 1) {\n                  is_validateNo = true;\n                  if (!noLogout) set_kakao_logout(jwt_token)(dispatch, getState);\n                }\n\n                dispatch({\n                  type: LOGIN_TOKEN_CHECK,\n                  payload: {\n                    is_validateNo: is_validateNo\n                  }\n                });\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](6);\n                console.error(_context.t0);\n\n              case 17:\n                return _context.abrupt(\"return\", is_validateNo);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 14]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function set_kakao_login(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (localStorage.getItem(\"jwt_token\")) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 3;\n                return api.post(data, \"/kakao/login\");\n\n              case 3:\n                response = _context2.sent;\n                set_cookie(\"jwt_token\", response.data.msg.jwt_token)(dispatch, getState);\n                if (response.data.msg.kakaoProp) set_cookie(\"kakaoProp\", _JSON$stringify(response.data.msg.kakaoProp))(dispatch, getState);\n                if (response.data.msg.kakaoProp) set_cookie(\"photo_url\", response.data.msg.kakaoProp.photo_url)(dispatch, getState); // const valid = await validate_token(response.data.msg.jwt_token)(\n                //     dispatch,\n                //     getState\n                // );\n\n                dispatch({\n                  type: SET_KAKAO_LOGIN,\n                  payload: {\n                    loginInfo: {\n                      jwt_token: response.data.msg.jwt_token,\n                      kakaoProp: response.data.msg.kakaoProp,\n                      is_login: false\n                    }\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function get_kakao_info(response) {\n  return function (dispatch, getState) {};\n}\n\nvar index = function index() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_KAKAO_INFO:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: action.payload.loginInfo.jwt_token,\n          kakaoProp: action.payload.loginInfo.kakaoProp && _objectSpread({}, state.login.kakaoProp, action.payload.loginInfo.kakaoProp)\n        }),\n        is_login: true\n      });\n\n    case FIXED_LOGIN:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: action.payload.loginInfo.jwt_token\n        }),\n        is_login: true\n      });\n\n    case SET_KAKAO_LOGIN:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: action.payload.loginInfo.jwt_token,\n          kakaoProp: action.payload.loginInfo.kakaoProp\n        }),\n        is_login: true\n      });\n\n    case SET_KAKAO_LOGOUT:\n      return _objectSpread({}, state, {\n        login: _objectSpread({}, state.login, {\n          jwt_token: null,\n          kakaoProp: null\n        }),\n        is_login: false\n      });\n\n    case LOGIN_TOKEN_CHECK:\n      return _objectSpread({}, state, {\n        is_validateNo: action.payload.is_validateNo || false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/reducers/kakaoinfo.js"],"names":["SET_KAKAO_INFO","SET_KAKAO_LOGIN","SET_KAKAO_LOGOUT","FIXED_LOGIN","LOGIN_TOKEN_CHECK","set_cookie","set_loading","set_message","message_open","api","initialState","is_login","login","is_validateNo","set_kakao_logout","loginkey","dispatch","getState","postKey","then","response","type","localStorage","removeItem","err","console","error","set_kakao_info","data","msg","params","jwt_token","kakaoinfo","getItem","post","payload","loginInfo","kakaoProp","validate_token","token","noLogout","code","set_kakao_login","photo_url","get_kakao_info","index","state","action"],"mappings":"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","sourcesContent":["import {\n    SET_KAKAO_INFO,\n    SET_KAKAO_LOGIN,\n    SET_KAKAO_LOGOUT,\n    FIXED_LOGIN,\n    LOGIN_TOKEN_CHECK\n} from \"../actions/types\";\nimport {\n    set_cookie,\n    set_loading,\n    set_message,\n    message_open\n} from \"./utilsinfo\";\nimport api from \"../logic/asMedicoAPI\";\n\nconst initialState = {\n    is_login: false,\n    login: null,\n    is_validateNo: false\n};\n\nexport function set_kakao_logout(loginkey) {\n    return (dispatch, getState) => {\n        set_loading(true)(dispatch, getState);\n        api.postKey(null, \"/My/logout\", loginkey)\n            .then(response => {\n                set_message(\"로그아웃 되었습니다.\")(dispatch, getState);\n                dispatch({\n                    type: SET_KAKAO_LOGOUT\n                });\n                localStorage.removeItem(\"jwt_token\");\n                localStorage.removeItem(\"photo_url\");\n            })\n            .catch(err => {\n                console.error(err);\n                set_loading(false)(dispatch, getState);\n                localStorage.removeItem(\"jwt_token\");\n                localStorage.removeItem(\"photo_url\");\n                dispatch({\n                    type: SET_KAKAO_LOGOUT\n                });\n            });\n    };\n}\nexport function set_kakao_info(data, msg) {\n    return (dispatch, getState) => {\n        let params = data;\n        let jwt_token =\n            getState().kakaoinfo.login.jwt_token ||\n            localStorage.getItem(\"jwt_token\");\n        if (!jwt_token) {\n            set_kakao_logout(data)(dispatch, getState);\n        } else {\n            params.jwt_token = jwt_token;\n        }\n        api.post(params, \"/kakao/signupComplete\")\n            .then(response => {\n                message_open(\n                    msg ||\n                        response.data.msg ||\n                        response.data[\"application/json\"].msg\n                )(dispatch, getState);\n                dispatch({\n                    type: SET_KAKAO_INFO,\n                    payload: {\n                        loginInfo: {\n                            kakaoProp: response.data.msg.kakaoProp\n                        }\n                    }\n                });\n            })\n            .catch(err => {\n                // console.error(err);\n            });\n    };\n}\nexport function validate_token(token, noLogout) {\n    return async (dispatch, getState) => {\n        let params = {};\n        let jwt_token = token || localStorage.getItem(\"jwt_token\");\n        if (!jwt_token) return false;\n        params.jwt_token = jwt_token;\n        let response;\n        let is_validateNo = false;\n        try {\n            response = await api.post(params, \"/kakao/validateToken\");\n            if (response.data.code === 1) {\n                is_validateNo = true;\n                if (!noLogout) set_kakao_logout(jwt_token)(dispatch, getState);\n            }\n            dispatch({\n                type: LOGIN_TOKEN_CHECK,\n                payload: {\n                    is_validateNo: is_validateNo\n                }\n            });\n        } catch (error) {\n            console.error(error);\n        }\n\n        return is_validateNo;\n    };\n}\nexport function set_kakao_login(data) {\n    return async (dispatch, getState) => {\n        if (!localStorage.getItem(\"jwt_token\")) {\n            let response = await api.post(data, \"/kakao/login\");\n\n            set_cookie(\"jwt_token\", response.data.msg.jwt_token)(\n                dispatch,\n                getState\n            );\n            if (response.data.msg.kakaoProp)\n                set_cookie(\n                    \"kakaoProp\",\n                    JSON.stringify(response.data.msg.kakaoProp)\n                )(dispatch, getState);\n            if (response.data.msg.kakaoProp)\n                set_cookie(\"photo_url\", response.data.msg.kakaoProp.photo_url)(\n                    dispatch,\n                    getState\n                );\n\n            // const valid = await validate_token(response.data.msg.jwt_token)(\n            //     dispatch,\n            //     getState\n            // );\n\n            dispatch({\n                type: SET_KAKAO_LOGIN,\n                payload: {\n                    loginInfo: {\n                        jwt_token: response.data.msg.jwt_token,\n                        kakaoProp: response.data.msg.kakaoProp,\n                        is_login: false\n                    }\n                }\n            });\n        }\n    };\n}\nexport function get_kakao_info(response) {\n    return (dispatch, getState) => {};\n}\n\nconst index = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_KAKAO_INFO:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: action.payload.loginInfo.jwt_token,\n                    kakaoProp: action.payload.loginInfo.kakaoProp && {\n                        ...state.login.kakaoProp,\n                        ...action.payload.loginInfo.kakaoProp\n                    }\n                },\n                is_login: true\n            };\n        case FIXED_LOGIN:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: action.payload.loginInfo.jwt_token\n                },\n                is_login: true\n            };\n        case SET_KAKAO_LOGIN:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: action.payload.loginInfo.jwt_token,\n                    kakaoProp: action.payload.loginInfo.kakaoProp\n                },\n                is_login: true\n            };\n        case SET_KAKAO_LOGOUT:\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    jwt_token: null,\n                    kakaoProp: null\n                },\n                is_login: false\n            };\n        case LOGIN_TOKEN_CHECK:\n            return {\n                ...state,\n                is_validateNo: action.payload.is_validateNo || false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}