{"ast":null,"code":"var _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/components/popup/ErrorPopup.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport styled from \"styled-components\";\nimport { Button as B, Typography } from \"@material-ui/core\";\nimport Layout from \"../layouts/PopupLayout\";\nimport { pTr, pInt } from \"../../styles/typography\";\nimport { error_close, set_loading } from \"../../reducers/utilsinfo\";\nimport theme from \"../../theme\";\nimport { useRouter } from \"next/router\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n    // height: pTr(568)\n    width: pTr(299),\n    borderRadius: pTr(6)\n  };\n} //#region\n\n\nconst PaperStyle = styled.div`\n  && {\n    position: absolute;\n    background-color: ${theme.palette.background.paper};\n    box-shadow: ${theme.shadows[0]};\n    outline: \"none\";\n  }\n`;\nconst Content = styled.div`\n  && {\n    text-align: center;\n    padding: ${pTr(10)} ${pTr(10)};\n  }\n`;\nconst Body = styled(Typography)`\n  && {\n    font-size: ${pTr(18)};\n    line-height: ${pInt(24)}px;\n    letter-spacing: 0;\n    text-align: left;\n    margin: ${pTr(30)};\n  }\n`;\nconst Button = styled(B)`\n  && {\n    background-color: ${props => props.color};\n    color: ${props => props.color == \"black\" ? \"white\" : \"black\"};\n    width: 100%;\n    max-width: 126px;\n    height: 35px;\n    border: 1px solid rgb(41 41 41);\n    display: inline-block;\n  }\n`;\nlet thispath;\n\nconst ErrorPopup = props => {\n  const {\n    bodyProps,\n    onClose,\n    is_error,\n    errorObj,\n    error_close\n  } = props;\n  const router = useRouter();\n  useEffect(() => {\n    if (!thispath) thispath = router.pathname;else if (thispath != router.pathname) {\n      error_close();\n      onClose();\n    }\n  }, [router.pathname]);\n  useEffect(() => {\n    if (!is_error) {\n      onClose();\n    }\n  }, [is_error]);\n  return __jsx(PaperStyle, {\n    style: getModalStyle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Body, _extends({}, bodyProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), errorObj.msg), __jsx(Button, {\n    color: \"white\",\n    onClick: () => {\n      error_close();\n      onClose();\n      props.set_loading(true);\n      router.push(\"/\").finally(x => {\n        props.set_loading(false);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, errorObj.cancel), __jsx(\"span\", {\n    style: {\n      paddingLeft: \"7px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(Button, {\n    color: \"black\",\n    onClick: () => {\n      error_close();\n      onClose();\n      router.reload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, errorObj.ok)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    is_error: state.utilsinfo.is_error,\n    errorObj: state.utilsinfo.errorObj\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  error_close,\n  set_loading\n}, dispatch);\n\nconst ErrorPopupConnect = connect(mapStateToProps, mapDispatchToProps)(ErrorPopup);\nexport default function Index(props) {\n  const {\n    open,\n    onClose\n  } = props,\n        others = _objectWithoutProperties(props, [\"open\", \"onClose\"]);\n\n  return __jsx(Layout, _extends({\n    open: open,\n    handleClose: onClose,\n    content: ErrorPopupConnect\n  }, others, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/components/popup/ErrorPopup.js"],"names":["React","useEffect","connect","bindActionCreators","styled","Button","B","Typography","Layout","pTr","pInt","error_close","set_loading","theme","useRouter","getModalStyle","top","left","transform","width","borderRadius","PaperStyle","div","palette","background","paper","shadows","Content","Body","props","color","thispath","ErrorPopup","bodyProps","onClose","is_error","errorObj","router","pathname","msg","push","finally","x","cancel","paddingLeft","reload","ok","mapStateToProps","state","utilsinfo","mapDispatchToProps","dispatch","ErrorPopupConnect","Index","open","others"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport styled from \"styled-components\";\n\nimport { Button as B, Typography } from \"@material-ui/core\";\n\nimport Layout from \"../layouts/PopupLayout\";\nimport { pTr, pInt } from \"../../styles/typography\";\n\nimport { error_close, set_loading } from \"../../reducers/utilsinfo\";\n\nimport theme from \"../../theme\";\nimport { useRouter } from \"next/router\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n    // height: pTr(568)\n    width: pTr(299),\n    borderRadius: pTr(6)\n  };\n}\n\n//#region\nconst PaperStyle = styled.div`\n  && {\n    position: absolute;\n    background-color: ${theme.palette.background.paper};\n    box-shadow: ${theme.shadows[0]};\n    outline: \"none\";\n  }\n`;\nconst Content = styled.div`\n  && {\n    text-align: center;\n    padding: ${pTr(10)} ${pTr(10)};\n  }\n`;\nconst Body = styled(Typography)`\n  && {\n    font-size: ${pTr(18)};\n    line-height: ${pInt(24)}px;\n    letter-spacing: 0;\n    text-align: left;\n    margin: ${pTr(30)};\n  }\n`;\nconst Button = styled(B)`\n  && {\n    background-color: ${props => props.color};\n    color: ${props => (props.color == \"black\" ? \"white\" : \"black\")};\n    width: 100%;\n    max-width: 126px;\n    height: 35px;\n    border: 1px solid rgb(41 41 41);\n    display: inline-block;\n  }\n`;\nlet thispath;\nconst ErrorPopup = props => {\n  const { bodyProps, onClose, is_error, errorObj, error_close } = props;\n  const router = useRouter();\n  useEffect(() => {\n    if (!thispath) thispath = router.pathname;\n    else if (thispath != router.pathname) {\n      error_close();\n      onClose();\n    }\n  }, [router.pathname]);\n  useEffect(() => {\n    if (!is_error) {\n      onClose();\n    }\n  }, [is_error]);\n  return (\n    <PaperStyle style={getModalStyle()}>\n      <Content>\n        <Body {...bodyProps}>{errorObj.msg}</Body>\n        <Button\n          color=\"white\"\n          onClick={() => {\n            error_close();\n            onClose();\n            props.set_loading(true);\n            router.push(\"/\").finally(x => {\n              props.set_loading(false);\n            });\n          }}\n        >\n          {errorObj.cancel}\n        </Button>\n        <span style={{ paddingLeft: \"7px\" }}></span>\n        <Button\n          color=\"black\"\n          onClick={() => {\n            error_close();\n            onClose();\n            router.reload();\n          }}\n        >\n          {errorObj.ok}\n        </Button>\n      </Content>\n    </PaperStyle>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    is_error: state.utilsinfo.is_error,\n    errorObj: state.utilsinfo.errorObj\n  };\n};\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ error_close, set_loading }, dispatch);\n\nconst ErrorPopupConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ErrorPopup);\n\nexport default function Index(props) {\n  const { open, onClose, ...others } = props;\n  return (\n    <Layout\n      open={open}\n      handleClose={onClose}\n      content={ErrorPopupConnect}\n      {...others}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}