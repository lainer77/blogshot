{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTAP(access_token = \"\") {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n\n  const signUp = (userId = \"\", password = \"\", {\n    success = (response = {}) => {}\n  }) => {\n    setLoading(true);\n    return axios.post(`http://${BASE_URL}/signup`, {\n      json: JSON.stringify({\n        userId,\n        password\n      })\n    }, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    }).then(res => {\n      success(res);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  const overlap = id => {\n    return axios.get(`http://${BASE_URL}/overlap/${id}`, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    });\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios.get(`http://${BASE_URL}/tistory/blogs`, {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n        return res;\n      }).catch(error => {\n        setError(error);\n        return error;\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, [access_token]);\n  return {\n    signUp,\n    overlap,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTAP.propTypes = {};\nexport default useTAP;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTAP.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useTAP","access_token","data","setData","loading","setLoading","error","setError","signUp","userId","password","success","response","post","json","JSON","stringify","timeout","then","res","finally","overlap","id","get","params","console","log","catch","propTypes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,MAAT,CAAgBC,YAAY,GAAG,EAA/B,EAAmC;AACjC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,EAAlC;;AAEA,QAAMc,MAAM,GAAG,CACbC,MAAM,GAAG,EADI,EAEbC,QAAQ,GAAG,EAFE,EAGb;AAAEC,IAAAA,OAAO,GAAG,CAACC,QAAQ,GAAG,EAAZ,KAAmB,CAAE;AAAjC,GAHa,KAIV;AACHP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,WAAOR,KAAK,CACTgB,IADI,CAEF,UAASf,QAAS,SAFhB,EAGH;AAAEgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAf;AAAR,KAHG,EAIH;AACEO,MAAAA,OAAO,EAAElB,YAAY,GAAG,CAD1B,CAC4B;;AAD5B,KAJG,EAQJmB,IARI,CAQCC,GAAG,IAAI;AACXR,MAAAA,OAAO,CAACQ,GAAD,CAAP;AACD,KAVI,EAWJC,OAXI,CAWI,MAAM;AACbf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbI,CAAP;AAcD,GApBD;;AAqBA,QAAMgB,OAAO,GAAGC,EAAE,IAAI;AACpB,WAAOzB,KAAK,CAAC0B,GAAN,CAAW,UAASzB,QAAS,YAAWwB,EAAG,EAA3C,EAA8C;AACnDL,MAAAA,OAAO,EAAElB,YAAY,GAAG,CAD2B,CACzB;;AADyB,KAA9C,CAAP;AAGD,GAJD;;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,MAAAA,KAAK,CACF0B,GADH,CACQ,UAASzB,QAAS,gBAD1B,EAC2C;AACvC0B,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,YAAY,EAAEA;AAAhB,SAD+B;AAEvCgB,QAAAA,OAAO,EAAElB,YAAY,GAAG,CAFe,CAEb;;AAFa,OAD3C,EAKGmB,IALH,CAKQC,GAAG,IAAI;AACXM,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACjB,IAAhB;AACAC,QAAAA,OAAO,CAACgB,GAAG,CAACjB,IAAL,CAAP;AACA,eAAOiB,GAAP;AACD,OATH,EAUGQ,KAVH,CAUSrB,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,eAAOA,KAAP;AACD,OAbH,EAcGc,OAdH,CAcW,MAAM;AACbf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAhBH;AAiBD;AACF,GArBQ,EAqBN,CAACJ,YAAD,CArBM,CAAT;AAuBA,SAAO;AACLO,IAAAA,MADK;AAELa,IAAAA,OAFK;AAGLnB,IAAAA,IAHK;AAILE,IAAAA,OAJK;AAKLE,IAAAA;AALK,GAAP;AAOD;;AAEDN,MAAM,CAAC4B,SAAP,GAAmB,EAAnB;AAEA,eAAe5B,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTAP(access_token = \"\") {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const signUp = (\n    userId = \"\",\n    password = \"\",\n    { success = (response = {}) => {} }\n  ) => {\n    setLoading(true);\n    return axios\n      .post(\n        `http://${BASE_URL}/signup`,\n        { json: JSON.stringify({ userId, password }) },\n        {\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        }\n      )\n      .then(res => {\n        success(res);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  const overlap = id => {\n    return axios.get(`http://${BASE_URL}/overlap/${id}`, {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n    });\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios\n        .get(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          return error;\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [access_token]);\n\n  return {\n    signUp,\n    overlap,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTAP.propTypes = {};\n\nexport default useTAP;\n"]},"metadata":{},"sourceType":"module"}