{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTistoryBlogs() {\n  var access_token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var absolve = function absolve() {\n    if (access_token) {\n      setLoading(true);\n      return axios.post(\"http://\".concat(BASE_URL, \"/tistory/blogs\"), {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(function (res) {\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n        return res;\n      })[\"catch\"](function (error) {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (access_token) {\n      setLoading(true);\n      axios.get(\"http://\".concat(BASE_URL, \"/tistory/blogs\"), {\n        params: {\n          access_token: access_token\n        },\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n      }).then(function (res) {\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n        return res;\n      })[\"catch\"](function (error) {\n        setError(error);\n        setLoading(false);\n        return error;\n      });\n    }\n  }, [access_token]);\n  return {\n    absolve: absolve,\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseTistoryBlogs.propTypes = {};\nexport default useTistoryBlogs;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTistoryBlogs.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useTistoryBlogs","access_token","data","setData","loading","setLoading","error","setError","absolve","post","params","timeout","then","res","console","log","get","propTypes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,eAAT,GAA4C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;;AAAA,kBAClBP,QAAQ,EADU;AAAA,MACnCQ,IADmC;AAAA,MAC7BC,OAD6B;;AAAA,mBAEZT,QAAQ,CAAC,KAAD,CAFI;AAAA,MAEnCU,OAFmC;AAAA,MAE1BC,UAF0B;;AAAA,mBAGhBX,QAAQ,EAHQ;AAAA,MAGnCY,KAHmC;AAAA,MAG5BC,QAH4B;;AAK1C,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIP,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,aAAOR,KAAK,CACTY,IADI,kBACWX,QADX,qBACqC;AACxCY,QAAAA,MAAM,EAAE;AAAET,UAAAA,YAAY,EAAEA;AAAhB,SADgC;AAExCU,QAAAA,OAAO,EAAEZ,YAAY,GAAG,CAFgB,CAEd;;AAFc,OADrC,EAKJa,IALI,CAKC,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACX,IAAhB;AACAC,QAAAA,OAAO,CAACU,GAAG,CAACX,IAAL,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOQ,GAAP;AACD,OAVI,WAWE,UAAAP,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOC,KAAP;AACD,OAfI,CAAP;AAgBD;AACF,GApBD;;AAsBAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,YAAJ,EAAkB;AAChBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,MAAAA,KAAK,CACFmB,GADH,kBACiBlB,QADjB,qBAC2C;AACvCY,QAAAA,MAAM,EAAE;AAAET,UAAAA,YAAY,EAAEA;AAAhB,SAD+B;AAEvCU,QAAAA,OAAO,EAAEZ,YAAY,GAAG,CAFe,CAEb;;AAFa,OAD3C,EAKGa,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACX,IAAhB;AACAC,QAAAA,OAAO,CAACU,GAAG,CAACX,IAAL,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOQ,GAAP;AACD,OAVH,WAWS,UAAAP,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAAOC,KAAP;AACD,OAfH;AAgBD;AACF,GApBQ,EAoBN,CAACL,YAAD,CApBM,CAAT;AAsBA,SAAO;AACLO,IAAAA,OAAO,EAAPA,OADK;AAELN,IAAAA,IAAI,EAAJA,IAFK;AAGLE,IAAAA,OAAO,EAAPA,OAHK;AAILE,IAAAA,KAAK,EAALA;AAJK,GAAP;AAMD;;AAEDN,eAAe,CAACiB,SAAhB,GAA4B,EAA5B;AAEA,eAAejB,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTistoryBlogs(access_token = \"\") {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const absolve = () => {\n    if (access_token) {\n      setLoading(true);\n      return axios\n        .post(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          setLoading(false);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          setLoading(false);\n          return error;\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (access_token) {\n      setLoading(true);\n      axios\n        .get(`http://${BASE_URL}/tistory/blogs`, {\n          params: { access_token: access_token },\n          timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n        })\n        .then(res => {\n          console.log(res.data);\n          setData(res.data);\n          setLoading(false);\n          return res;\n        })\n        .catch(error => {\n          setError(error);\n          setLoading(false);\n          return error;\n        });\n    }\n  }, [access_token]);\n\n  return {\n    absolve,\n    data,\n    loading,\n    error\n  };\n}\n\nuseTistoryBlogs.propTypes = {};\n\nexport default useTistoryBlogs;\n"]},"metadata":{},"sourceType":"module"}