{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/daehankim/Documents/GitHub/blogshot/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Layout from \"../components/layouts/Layout\";\nimport ActionMyBar from \"../components/component/ActionMyBar\";\nimport { useRouter } from \"next/router\";\nimport { TextField, FormControl, Card, Button, CircularProgress } from \"@material-ui/core\";\nimport useDataOne from \"../useActions/useDataOne\";\nimport usePosting from \"../useActions/usePosting\";\nimport { useState } from \"react\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    content: {\n      padding: \"64px 0px 0px\"\n    },\n    card: {\n      backgroundColor: \"rgb(240 240 240)\",\n      padding: \"20px\",\n      margin: \"0px 20px 20px\"\n    },\n    textField: {\n      margin: \"10px 10px 20px\"\n    },\n    actions: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0px 20px 5px\",\n      marginTop: \"15px\"\n    },\n    button: {\n      margin: \"5px\"\n    },\n    process: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  };\n});\n\nvar Index = function Index(props) {\n  var classes = useStyles();\n  var route = useRouter();\n\n  var _useDataOne = useDataOne(\"posts\", route.query.code),\n      post = _useDataOne.data,\n      loading = _useDataOne.loading,\n      error = _useDataOne.error;\n\n  var _useState = useState(post),\n      updatePost = _useState[0],\n      setUpdatePost = _useState[1];\n\n  var _usePosting = usePosting(),\n      postSave = _usePosting.postSave,\n      posting = _usePosting.posting;\n\n  var handleOnSave = function handleOnSave() {\n    postSave(post.code, {\n      title: updatePost.title,\n      context: updatePost.context\n    }, {\n      success: function success(res) {\n        if (res.data && res.data.msg) {\n          alert(res.data.msg);\n        }\n      },\n      fail: function fail(err) {\n        if (err.response.data && err.response.data.msg) {\n          alert(err.response.data.msg);\n        }\n      }\n    });\n  };\n\n  var handleOnPosting = function handleOnPosting() {\n    posting(updatePost, {\n      success: function success(sres) {\n        if (sres.data && sres.data.msg) alert(sres.data.msg);\n      }\n    });\n  };\n\n  var handleUpdataPost = function handleUpdataPost(key) {\n    return function () {\n      setUpdatePost(_objectSpread({}, updatePost, {\n        context: e.target.value\n      }));\n    };\n  };\n\n  var MyPage = __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(ActionMyBar, {\n    homeEnable: false,\n    title: post.code || \"포스트\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOnSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"default\",\n    onClick: handleOnPosting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\uD3EC\\uC2A4\\uD305\")), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, loading ? __jsx(\"div\", {\n    className: classes.process,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(TextField, {\n    className: classes.textField,\n    multiline: true,\n    fullWidth: true,\n    label: \"제목\",\n    onChange: function onChange(e) {\n      setUpdatePost(_objectSpread({}, updatePost, {\n        title: e.target.value\n      }));\n    },\n    defaultValue: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.textField,\n    multiline: true,\n    fullWidth: true,\n    label: \"내용\",\n    onChange: function onChange(e) {\n      setUpdatePost(_objectSpread({}, updatePost, {\n        context: e.target.value\n      }));\n    },\n    defaultValue: post.context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), error && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, error)));\n\n  return __jsx(Layout, {\n    cookies: props.cookies,\n    content: MyPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/pages/post.js"],"names":["makeStyles","Layout","ActionMyBar","useRouter","TextField","FormControl","Card","Button","CircularProgress","useDataOne","usePosting","useState","useStyles","theme","root","content","padding","card","backgroundColor","margin","textField","actions","display","alignItems","justifyContent","marginTop","button","process","Index","props","classes","route","query","code","post","data","loading","error","updatePost","setUpdatePost","postSave","posting","handleOnSave","title","context","success","res","msg","alert","fail","err","response","handleOnPosting","sres","handleUpdataPost","key","e","target","value","MyPage","cookies"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\n\nimport Layout from \"../components/layouts/Layout\";\n\nimport ActionMyBar from \"../components/component/ActionMyBar\";\n\nimport { useRouter } from \"next/router\";\nimport {\n  TextField,\n  FormControl,\n  Card,\n  Button,\n  CircularProgress\n} from \"@material-ui/core\";\nimport useDataOne from \"../useActions/useDataOne\";\nimport usePosting from \"../useActions/usePosting\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: \"64px 0px 0px\"\n  },\n  card: {\n    backgroundColor: \"rgb(240 240 240)\",\n    padding: \"20px\",\n    margin: \"0px 20px 20px\"\n  },\n  textField: {\n    margin: \"10px 10px 20px\"\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0px 20px 5px\",\n    marginTop: \"15px\"\n  },\n  button: {\n    margin: \"5px\"\n  },\n  process: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst Index = props => {\n  const classes = useStyles();\n  const route = useRouter();\n  const { data: post, loading, error } = useDataOne(\"posts\", route.query.code);\n  const [updatePost, setUpdatePost] = useState(post);\n  const { postSave, posting } = usePosting();\n\n  const handleOnSave = () => {\n    postSave(\n      post.code,\n      {\n        title: updatePost.title,\n        context: updatePost.context\n      },\n      {\n        success: res => {\n          if (res.data && res.data.msg) {\n            alert(res.data.msg);\n          }\n        },\n        fail: err => {\n          if (err.response.data && err.response.data.msg) {\n            alert(err.response.data.msg);\n          }\n        }\n      }\n    );\n  };\n  const handleOnPosting = () => {\n    posting(updatePost, {\n      success: sres => {\n        if (sres.data && sres.data.msg) alert(sres.data.msg);\n      }\n    });\n  };\n  const handleUpdataPost = key => () => {\n    setUpdatePost({ ...updatePost, context: e.target.value });\n  };\n\n  const MyPage = (\n    <div className={classes.root}>\n      <ActionMyBar homeEnable={false} title={post.code || \"포스트\"} />\n      <div className={classes.content}>\n        <div className={classes.actions}>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled\n          >\n            삭제\n          </Button>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOnSave}\n          >\n            저장\n          </Button>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"default\"\n            onClick={handleOnPosting}\n          >\n            포스팅\n          </Button>\n        </div>\n\n        <Card className={classes.card}>\n          {loading ? (\n            <div className={classes.process}>\n              <CircularProgress />\n            </div>\n          ) : (\n            <FormControl fullWidth variant=\"outlined\">\n              <TextField\n                className={classes.textField}\n                multiline\n                fullWidth\n                label={\"제목\"}\n                onChange={e => {\n                  setUpdatePost({ ...updatePost, title: e.target.value });\n                }}\n                defaultValue={post.title}\n              />\n              <TextField\n                className={classes.textField}\n                multiline\n                fullWidth\n                label={\"내용\"}\n                onChange={e => {\n                  setUpdatePost({ ...updatePost, context: e.target.value });\n                }}\n                defaultValue={post.context}\n              />\n            </FormControl>\n          )}\n        </Card>\n        {error && <p>{error}</p>}\n      </div>\n    </div>\n  );\n\n  return <Layout cookies={props.cookies} content={MyPage} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}