{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTistoryLogin() {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1]; //   const dispatch = useDispatch();\n\n\n  useEffect(function () {\n    setLoading(true);\n    axios.get(\"http://\".concat(BASE_URL, \"/auth\"), {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    }).then(function (res) {\n      console.log(res.data);\n      setLoading(false); // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n    })[\"catch\"](function (error) {\n      setError(error);\n    });\n  }, []);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseTistoryLogin.propTypes = {};\nexport default useTistoryLogin;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useTistoryLogin.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useTistoryLogin","data","setData","loading","setLoading","error","setError","get","timeout","then","res","console","log","propTypes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,eAAT,GAA2B;AAAA,kBACDN,QAAQ,CAAC,EAAD,CADP;AAAA,MAClBO,IADkB;AAAA,MACZC,OADY;;AAAA,mBAEKR,QAAQ,CAAC,KAAD,CAFb;AAAA,MAElBS,OAFkB;AAAA,MAETC,UAFS;;AAAA,mBAGCV,QAAQ,EAHT;AAAA,MAGlBW,KAHkB;AAAA,MAGXC,QAHW,kBAIzB;;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,KAAK,CACFU,GADH,kBACiBT,QADjB,YACkC;AAC9BU,MAAAA,OAAO,EAAET,YAAY,GAAG,CADM,CACJ;;AADI,KADlC,EAIGU,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACT,IAAhB;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFW,CAGX;AACD,KARH,WASS,UAAAC,KAAK,EAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXH;AAYD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO;AAAEJ,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA,OAAR;AAAiBE,IAAAA,KAAK,EAALA;AAAjB,GAAP;AACD;;AAEDL,eAAe,CAACa,SAAhB,GAA4B,EAA5B;AAEA,eAAeb,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useTistoryLogin() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`http://${BASE_URL}/auth`, {\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n      })\n      .then(res => {\n        console.log(res.data);\n        setLoading(false);\n        // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, []);\n\n  return { data, loading, error };\n}\n\nuseTistoryLogin.propTypes = {};\n\nexport default useTistoryLogin;\n"]},"metadata":{},"sourceType":"module"}