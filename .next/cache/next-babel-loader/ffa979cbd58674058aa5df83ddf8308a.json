{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\"; // import { useDispatch } from \"react-redux\";\n\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useDataOne(tableName, id) {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      error = _useState3[0],\n      setError = _useState3[1]; //   const dispatch = useDispatch();\n\n\n  useEffect(function () {\n    setLoading(true);\n    axios.get(\"http://\".concat(BASE_URL, \"/\").concat(tableName, \"/\").concat(id), {\n      timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n\n    }).then(function (res) {\n      setData(res.data);\n      setLoading(false); // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n    })[\"catch\"](function (error) {\n      setError(error);\n    });\n  }, []);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nuseDataOne.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.any.isRequired\n};\nexport default useDataOne;","map":{"version":3,"sources":["/Users/daehankim/Documents/GitHub/blogshot/useActions/useDataOne.js"],"names":["useState","useEffect","PropTypes","axios","BASE_URL","API_TIME_OUT","useDataOne","tableName","id","data","setData","loading","setLoading","error","setError","get","timeout","then","res","propTypes","string","isRequired","any"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;;AAEA,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,EAA/B,EAAmC;AAAA,kBACTR,QAAQ,CAAC,EAAD,CADC;AAAA,MAC1BS,IAD0B;AAAA,MACpBC,OADoB;;AAAA,mBAEHV,QAAQ,CAAC,KAAD,CAFL;AAAA,MAE1BW,OAF0B;AAAA,MAEjBC,UAFiB;;AAAA,mBAGPZ,QAAQ,CAAC,EAAD,CAHD;AAAA,MAG1Ba,KAH0B;AAAA,MAGnBC,QAHmB,kBAIjC;;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAT,IAAAA,KAAK,CACFY,GADH,kBACiBX,QADjB,cAC6BG,SAD7B,cAC0CC,EAD1C,GACgD;AAC5CQ,MAAAA,OAAO,EAAEX,YAAY,GAAG,CADoB,CAClB;;AADkB,KADhD,EAIGY,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACXR,MAAAA,OAAO,CAACQ,GAAG,CAACT,IAAL,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFW,CAGX;AACD,KARH,WASS,UAAAC,KAAK,EAAI;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXH;AAYD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO;AAAEJ,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA,OAAR;AAAiBE,IAAAA,KAAK,EAALA;AAAjB,GAAP;AACD;;AAEDP,UAAU,CAACa,SAAX,GAAuB;AACrBZ,EAAAA,SAAS,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAErBb,EAAAA,EAAE,EAAEN,SAAS,CAACoB,GAAV,CAAcD;AAFG,CAAvB;AAKA,eAAef,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\nimport { BASE_URL, API_TIME_OUT } from \"../contants/constants\";\n\nfunction useDataOne(tableName, id) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n  //   const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`http://${BASE_URL}/${tableName}/${id}`, {\n        timeout: API_TIME_OUT / 2 // 15초 이내에 응답이 오지 않으면 에러로 간주\n      })\n      .then(res => {\n        setData(res.data);\n        setLoading(false);\n        // dispatch({ type: GET_POSTS_LIST, payload: { data: res.data } });\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, []);\n\n  return { data, loading, error };\n}\n\nuseDataOne.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.any.isRequired\n};\n\nexport default useDataOne;\n"]},"metadata":{},"sourceType":"module"}